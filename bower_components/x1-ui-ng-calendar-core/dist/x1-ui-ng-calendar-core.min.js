angular.module("x1.ui.calendar-core",["angularMoment","pascalprecht.translate"]);
angular.module("x1.ui.calendar-core").factory("CalendarCoreDataService",["calendarCoreConstants",function(calendarCoreConstants){"use strict";var today=moment(),initDate="20140510",quartersSubName=["Jan","Mar","Apr","Jun","Jul","Sep","Oct","Dec"],dayNamesShort=["Su","Mo","Tu","We","Th","Fr","Sa"],monthNamesShort=[{name:"Jan"},{name:"Feb"},{name:"Mar"},{name:"Apr"},{name:"May"},{name:"Jun"},{name:"Jul"},{name:"Aug"},{name:"Sep"},{name:"Oct"},{name:"Nov"},{name:"Dec"}],quartersName=[{name:"Q1",subNameStart:quartersSubName[0],subNameEnd:quartersSubName[1]},{name:"Q2",subNameStart:quartersSubName[2],subNameEnd:quartersSubName[3]},{name:"Q3",subNameStart:quartersSubName[4],subNameEnd:quartersSubName[5]},{name:"Q4",subNameStart:quartersSubName[6],subNameEnd:quartersSubName[7]}],minDate={quarter:1,day:1,month:1,year:2013,dateId:"20130101"},maxDate={quarter:today.quarter(),day:today.date(),month:today.month()+1,year:today.year(),dateId:today.format(calendarCoreConstants.DATE_FORMAT.DATE_ID)};return{setOffsetDates:function(timeOffest){today=moment().utcOffset(timeOffest),maxDate={quarter:today.quarter(),day:today.date(),month:today.month()+1,year:today.year(),dataId:today.format(calendarCoreConstants.DATE_FORMAT.DATE_ID)}},getInitDate:function(){return initDate},getMaxDate:function(){return maxDate},getMinDate:function(){return minDate},getDayNamesShort:function(){return dayNamesShort},getMonthNamesShort:function(){return monthNamesShort},getQuartersName:function(){return quartersName},getQuartersSubName:function(){return quartersSubName}}}]);
angular.module("x1.ui.calendar-core").factory("CalendarCoreQuarterService",["CalendarCoreUiService","CalendarCoreDataService","moment","calendarCoreConstants",function(CalendarCoreUiService,CalendarCoreDataService,moment,calendarCoreConstants){"use strict";function getYearQuarters(minYear,maxDate){var currentQuarter,i,quarters=[];for(i=0;i<service.quartersName.length;i++)currentQuarter=moment(minYear,"YYYY").quarter(i+1),quarters.push({startDate:+currentQuarter.startOf("quarter").format(calendarCoreConstants.DATE_FORMAT.DATE_ID),endDate:+service.getEndDate(currentQuarter.endOf("quarter").format(calendarCoreConstants.DATE_FORMAT.DATE_ID),maxDate),name:"Q"+(i+1),subNameStart:service.quartersSubName[2*i],subNameEnd:service.quartersSubName[2*i+1]});return quarters}var service={quartersName:CalendarCoreDataService.getQuartersName(),quartersSubName:CalendarCoreDataService.getQuartersSubName(),monthNamesShort:CalendarCoreDataService.getMonthNamesShort(),setFiscalData:function(fiscal){this.fiscalData=fiscal,this.isFiscal=!!fiscal},getQuarters:function(minDate,maxDate){return this.fiscalData?this.getFiscalQuarters():this.getGregorianQuarters(minDate,maxDate)},getEndDate:function(endDate,maxDate){var lastSelectedDate=moment(endDate,calendarCoreConstants.DATE_FORMAT.DATE_ID);return lastSelectedDate.isAfter(maxDate)?maxDate.format(calendarCoreConstants.DATE_FORMAT.DATE_ID):endDate},getGregorianQuarters:function(min,max){for(var minDate=moment(min||CalendarCoreUiService.getMinDate("quarters")),maxDate=moment(max||CalendarCoreUiService.getMaxDate("quarters")),minYear=minDate.get("year"),maxYear=maxDate.get("year"),result={};minYear<=maxYear;)result[minYear]=getYearQuarters(minYear,maxDate),minYear++;return result},getFiscalQuarters:function(){var quarter,endDate,startMonth,endMonth,year,i,fiscalQuarters=this.fiscalData.quarters.data,result={},quarterNumber=1;for(i=0;i<fiscalQuarters.length;i+=1)quarter=fiscalQuarters[i],quarterNumber=year!==+quarter.toString().substr(0,4)?1:quarterNumber,year=+quarter.toString().substr(0,4),result[year]=result[year]||[],endDate=CalendarCoreUiService.getPreviousDate(fiscalQuarters[i+1]),startMonth=CalendarCoreUiService.getDateObjFromStr(quarter).month,endMonth=CalendarCoreUiService.getDateObjFromStr(endDate).month,result[year].push({name:"Q"+quarterNumber++,subNameStart:this.monthNamesShort[startMonth].name,subNameEnd:this.monthNamesShort[endMonth].name,startDate:+quarter,endDate:+endDate});return result}};return service}]);
angular.module("x1.ui.calendar-core").factory("CalendarCoreUiService",["moment","calendarCoreConstants","CalendarCoreDataService",function(moment,calendarCoreConstants,CalendarCoreDataService){"use strict";return{isFiscal:!!this.fiscalData,initDate:CalendarCoreDataService.getInitDate(),minDate:CalendarCoreDataService.getMinDate(),maxDate:CalendarCoreDataService.getMaxDate(),monthNamesShort:CalendarCoreDataService.getMonthNamesShort(),dayNamesShort:CalendarCoreDataService.getDayNamesShort(),setFiscalData:function(data){this.fiscalData=data,this.isFiscal=!!data},getFiscalData:function(){return this.fiscalData},getMonthName:function(nonStandardYear,monthIndex){return nonStandardYear?"Period":this.monthNamesShort[monthIndex].name},getMonth:function(yearIndex,monthIndex,nonStandardYear){return{name:this.getMonthName(nonStandardYear,monthIndex),periodNum:nonStandardYear?monthIndex+1:"",start:+this.fiscalData.months.data[yearIndex],end:+moment(this.fiscalData.months.data[yearIndex+1],calendarCoreConstants.DATE_FORMAT.DATE_ID).subtract(1,"days").format(calendarCoreConstants.DATE_FORMAT.DATE_ID)}},getMonthNameShort:function(year){return this.isFiscal?this.getMonthNameShortFiscal(year):this.monthNamesShort},getMonthNameShortFiscal:function(year){var i,month=[],fiscalYears=this.fiscalData.years,yearNum=this.getYearNumFiscal(year);if(yearNum>=0){var yearCountMonth=fiscalYears.yearCountMonths[yearNum],yearStartMonth=fiscalYears.yearStartMonths[yearNum]-1,yearStartDate=fiscalYears.data[yearNum],nonStandardYear=fiscalYears.nonStandard[yearNum],yearIndex=this.getYearIndexFiscal(yearStartDate);if(nonStandardYear)for(i=0;i<yearCountMonth;i++,yearIndex++)month.push(this.getMonth(yearIndex,i,nonStandardYear));else{for(i=yearStartMonth;i<yearCountMonth;i++,yearIndex++)month.push(this.getMonth(yearIndex,i,nonStandardYear));for(i=0;i<yearStartMonth;i++,yearIndex++)month.push(this.getMonth(yearIndex,i,nonStandardYear))}}return month},getDayNameShort:function(date){if(this.isFiscal){var dayNames=this.dayNamesShort.slice(),firstDayOfWeek=this.getFirstDayOfWeek(date),end=dayNames.splice(0,firstDayOfWeek);return dayNames.concat(end)}return this.dayNamesShort},getYearNumFiscal:function(year){var lastYear,i,fiscalYears=this.fiscalData.years.data,length=fiscalYears.length,format=calendarCoreConstants.DATE_FORMAT.DATE_ID;for(i=0;i<length-1;i++)if(moment(fiscalYears[i],format).get("year")===year)return i;return lastYear=moment(fiscalYears[length-1],format).subtract(1,"day").get("year"),lastYear===year?length-2:-1},getYearIndexFiscal:function(yearStartDate){var i,fiscalMonths=this.fiscalData.months.data,length=fiscalMonths.length;for(i=0;i<length;i++)if(fiscalMonths[i]===yearStartDate)return i;return-1},getInitDate:function(){return this.initDate},getFiscalMaxDate:function(type){var format=calendarCoreConstants.DATE_FORMAT.DATE_ID,data=this.fiscalData[type].data,maxDate=data[data.length-1].toString();return maxDate=moment(maxDate,format).subtract(1,"days").format(format),maxDate=this.getDateObjFromStr(maxDate),{day:maxDate.day,month:maxDate.month,year:maxDate.year,quarter:maxDate.quarter,dateId:maxDate.dateId}},getFiscalMaxDateID:function(type){var data=this.fiscalData[type].data;return data[data.length-1]},getMaxDate:function(type){var fiscalMaxDateID,dateMoment,maxDateId,format=calendarCoreConstants.DATE_FORMAT.DATE_ID,maxDateObj={day:this.maxDate.day,month:this.maxDate.month-1,year:this.maxDate.year,quarter:this.maxDate.quarter,dateId:this.maxDate.dateId};return this.isFiscal?(fiscalMaxDateID=this.getFiscalMaxDateID(type),fiscalMaxDateID=moment(fiscalMaxDateID.toString(),format).subtract(1,"day").format(format),dateMoment=moment({year:+this.maxDate.year,month:this.maxDate.month-1,day:+this.maxDate.day}),maxDateId=dateMoment.format(calendarCoreConstants.DATE_FORMAT.DATE_ID),+fiscalMaxDateID<+maxDateId?this.getFiscalMaxDate(type):maxDateObj):maxDateObj},getFiscalMinDate:function(type){var data=this.fiscalData[type].data[0],minDate=this.getDateObjFromStr(data);return{day:minDate.day,month:minDate.month,year:minDate.year,quarter:minDate.quarter,dateId:data}},getFiscalMinDateID:function(type){var data=this.fiscalData[type].data;return data[0]},getMinDate:function(){return{day:this.minDate.day,month:this.minDate.month-1,year:this.minDate.year,quarter:this.minDate.quarter,dateId:this.minDate.dateId}},setMinDate:function(dateId){var momentDate;dateId&&(momentDate=moment(dateId,calendarCoreConstants.DATE_FORMAT.DATE_ID),this.minDate.day=momentDate.date(),this.minDate.month=momentDate.month()+1,this.minDate.quarter=momentDate.quarter(),this.minDate.year=momentDate.year(),this.minDate.dateId=dateId)},setMaxDate:function(dateId){var momentDate;dateId&&(momentDate=moment(dateId,calendarCoreConstants.DATE_FORMAT.DATE_ID),this.maxDate.day=momentDate.date(),this.maxDate.month=momentDate.month()+1,this.maxDate.quarter=momentDate.quarter(),this.maxDate.year=momentDate.year(),this.maxDate.dateId=dateId)},getDateObjFromStr:function(dateId){var momentDate=moment(""+dateId,calendarCoreConstants.DATE_FORMAT.DATE_ID),month=momentDate.month();return{dateId:dateId,year:momentDate.year(),quarter:momentDate.quarter()-1,month:month,day:momentDate.date(),data:""+dateId,options:this.monthNamesShort[month]}},getDatesArray:function(date,useSelectedDate,shiftedTime){var i,j,newDate,title,fiscalWeek,arrayDates=[],disableDay=!1,daysInCurrentMonth=!0,today=!1;shiftedTime=shiftedTime||moment().utcOffset();var toDate=date.endDate||this.getMaxDateForCalendar(date),fromDate=date.startDate||this.getMinDateForCalendar(date),startDate=moment(fromDate).format(calendarCoreConstants.DATE_FORMAT.DATE_ID);fromDate=moment(fromDate);var firstDayOfWeeks=this.getFirstDayOfWeek(date),firstDay=fromDate.get("day"),calendarStartDay=7-firstDayOfWeeks+firstDay>6?firstDay-firstDayOfWeeks:7-firstDayOfWeeks+firstDay;fromDate.subtract(calendarStartDay,"days");var countWeeks=Math.ceil((toDate.diff(fromDate,"days")+1)/7);for(i=0;i<countWeeks;i++)for(arrayDates[i]=[],j=0;j<7;j++)daysInCurrentMonth=this.displayDay(startDate,toDate,fromDate),today=fromDate.format(calendarCoreConstants.DATE_FORMAT.DATE_ID)===moment().utcOffset(shiftedTime).format(calendarCoreConstants.DATE_FORMAT.DATE_ID),disableDay=this.checkForDisableDay(fromDate,"weeks"),title=daysInCurrentMonth&&!disableDay?this.formatTitle(fromDate.toDate()):"",newDate={day:fromDate.get("date"),month:fromDate.get("month"),year:fromDate.get("year"),title:title,disable:disableDay,daysInCurrentMonth:daysInCurrentMonth,today:today,fiscalData:{startDate:moment(startDate,calendarCoreConstants.DATE_FORMAT.DATE_ID),endDate:toDate},data:fromDate.format(calendarCoreConstants.DATE_FORMAT.DATE_ID),maxDate:this.isMinMaxDate(fromDate,"MAX","weeks",date),minDate:this.isMinMaxDate(fromDate,"MIN","weeks",date)},this.isFiscal&&(fiscalWeek=this.fromGregorianToFiscalWeek(newDate,useSelectedDate),newDate.week=fiscalWeek.index,newDate.fiscal=fiscalWeek.fiscal,newDate.fiscalDateType=fiscalWeek.type,newDate.fiscalStart=+fromDate.format(calendarCoreConstants.DATE_FORMAT.DATE_ID)===fiscalWeek.fiscal,newDate.fiscalEnd=fromDate.format(calendarCoreConstants.DATE_FORMAT.DATE_ID)===moment(fiscalWeek.nextWeek,calendarCoreConstants.DATE_FORMAT.DATE_ID).subtract(1,"days").format(calendarCoreConstants.DATE_FORMAT.DATE_ID)),arrayDates[i].push(newDate),fromDate.add(1,"days");return arrayDates},getPreviousDate:function(dateStr){var date=moment(this.getDateObjFromStr(dateStr));return date.subtract(1,"days"),date.format(calendarCoreConstants.DATE_FORMAT.DATE_ID)},displayDay:function(_fromDate,_toDate,_currentDate){var format=calendarCoreConstants.DATE_FORMAT.DATE_ID,fromDate=moment(_fromDate,format);return this.isFiscal||fromDate.startOf("month"),+_toDate.format(format)>=+_currentDate.format(format)&&+fromDate.format(format)<=+_currentDate.format(format)},getWeekEndDate:function(dateObject,useSelectedDate){var weekEndDate,nextWeek,indexMonth,dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID,endWeek=+dateObject.data.fiscal,weeks=this.fiscalData.weeks.data;indexMonth=weeks.indexOf(endWeek),nextWeek=weeks[indexMonth+1],weekEndDate=moment(nextWeek,dateFormat).subtract(1,"days");var maxEnd=moment(this.getMaxDate("weeks")),resultDate=weekEndDate.isAfter(maxEnd)&&!useSelectedDate?maxEnd:weekEndDate;return dateObject.index=indexMonth,resultDate.format(dateFormat)},getStartDate:function(dateObject){var date=this.isFiscal&&dateObject.data?dateObject.data.fiscal:dateObject,dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID,startDate=moment(date,dateFormat),minDate=moment(this.getMinDate());return startDate.isAfter(minDate)?startDate.format(dateFormat):minDate.format(dateFormat)},getEndDate:function(dateObject,type,useSelectedDate){var date=this.isFiscal&&dateObject.data?dateObject.data.fiscal:dateObject,dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID,endDate=moment(date,dateFormat),maxDate=moment(this.getMaxDate(type));return endDate.isAfter(maxDate)&&!useSelectedDate?maxDate.format(dateFormat):endDate.format(dateFormat)},getFirstDayOfWeek:function(date){var fiscalYears,length,i;if(!this.isFiscal)return 0;for(fiscalYears=this.fiscalData.years,length=fiscalYears.data.length,i=0;i<length-1;i++){var currYear=moment(""+fiscalYears.data[i],calendarCoreConstants.DATE_FORMAT.DATE_ID).year();if(currYear===date.year)return fiscalYears.firstDayOfWeeks[i]-1}return fiscalYears.firstDayOfWeeks[length-2]-1},getMaxDateForCalendar:function(date){if(!this.isFiscal)return moment({year:date.year,month:date.month,day:1}).endOf("month");for(var monthIndex,fiscalWeeks=this.fiscalData.weeks.data,i=0;i<fiscalWeeks.length;i++)+fiscalWeeks[i].toString().substr(4,2)===date.month+1&&+fiscalWeeks[i].toString().substr(0,4)===date.year&&(monthIndex=i);var maxDate=fiscalWeeks[monthIndex+1];return moment({year:+maxDate.toString().substr(0,4),month:+maxDate.toString().substr(4,2)-1,day:+maxDate.toString().substr(6,2)})},getMinDateForCalendar:function(date){if(!this.isFiscal)return moment({year:date.year,month:date.month,day:1}).startOf("month");var monthIndex,i,fiscalMonths=this.fiscalData.weeks.data,length=fiscalMonths.length;for(i=0;i<length;i++)if(+fiscalMonths[i].toString().substr(4,2)===date.month+1&&+fiscalMonths[i].toString().substr(0,4)===date.year){monthIndex=i;break}var minDate=fiscalMonths[monthIndex];return moment({year:+minDate.toString().substr(0,4),month:minDate.toString().substr(4,2)-1,day:+minDate.toString().substr(6,2)})},checkForDisableDay:function(momentDate,type){var disable,minDateObj=this.getJsDAte(this.getMinDate(type)),maxDateObj=this.getJsDAte(this.getMaxDate(type));return disable=new Date(momentDate.toDate().toDateString())>new Date(maxDateObj.toDateString())||new Date(momentDate.toDate().toDateString())<new Date(minDateObj.toDateString())},isMinMaxDate:function(dateMoment,type,periodType,date){var result,minDateObj=this.getJsDAte(this.getMinDate(periodType)),maxDateObj=this.getJsDAte(this.getMaxDate(periodType));switch(type){case"MAX":result=dateMoment.toDate().toDateString()===maxDateObj.toDateString(),date&&date.endDate&&(result=date.endDate.isSame(dateMoment));break;case"MIN":result=dateMoment.toDate().toDateString()===minDateObj.toDateString(),date&&date.startDate&&(result=moment(date.options.start,calendarCoreConstants.DATE_FORMAT.DATE_ID).isSame(dateMoment))}return result},getJsDAte:function(obj){return new Date(obj.year,obj.month,obj.day)},formatTitle:function(date){var day=date.getDate(),month=date.getMonth(),year=date.getFullYear(),monthName=this.monthNamesShort[month].name;return monthName+" "+day+", "+year},formatNumber:function(date){return date<10?"0"+date:date},getNextDate:function(date){if(this.isFiscal){var currentFiscalData=this.fromGregorianToFiscalMonth(date),nextFiscalData=this.getNextFiscalMonth(currentFiscalData.options.start);return this.fromGregorianToFiscalMonth(nextFiscalData)}var month=date.month,year=date.year;return month++,12===month&&(month=0,++year),{dateId:""+year+month+"01",month:month,year:year,options:{name:this.monthNamesShort[month].name}}},getDate:function(date){var dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID;return{dateId:moment(date).format(dateFormat),month:date.month,year:date.year,data:moment(date).format(dateFormat),options:{name:this.monthNamesShort[date.month].name}}},checkMaxDate:function(config){var data,momentRightDate=moment(config.rightDate),momentMaxDate=moment(config.maxDate),dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID;return+momentRightDate.format(dateFormat)>+momentMaxDate.format(dateFormat)&&(data=this.getDate(config.maxDate),config.leftDate=config.singleView?data:this.getPrevDate(data),config.rightDate=this.getNextDate(config.leftDate)),{rightDate:config.rightDate,leftDate:config.leftDate}},checkMinDate:function(config){var data,momentLeftDate=moment(config.leftDate),momentMinDate=moment(config.minDate),dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID;return+momentLeftDate.format(dateFormat)<+momentMinDate.format(dateFormat)&&(data=this.getDate(config.minDate),config.rightDate=config.isSingle?data:this.getNextDate(data),config.leftDate=this.getPrevDate(config.rightDate)),{rightDate:config.rightDate,leftDate:config.leftDate}},getMonthFromPrevNextYear:function(date,type){var neededMonth,i,month=this.fiscalData.months.data,dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID,currentDate=moment(date),length=month.length;for(currentDate="next"===type?currentDate.add(1,"years"):currentDate.subtract(1,"years"),currentDate=+currentDate.format(dateFormat),i=0;i<length-1;i++)if(+month[i]<=currentDate&&currentDate<+month[i+1]){neededMonth=i>0?month[i]:month[0];break}return this.fromGregorianToFiscalMonth({data:neededMonth})},getPrevNextYear:function(date,type){var prevYear,nextYear,result,i,years=this.fiscalData.years.data,currentDate=+moment(date).format("YYYYMMDD"),length=years.length;for(i=0;i<length-1;i++)if(+years[i]<=currentDate&&currentDate<+years[i+1]){prevYear=i>0?years[i-1]:years[0],nextYear=years[i+1];break}return result={next:nextYear||years[length],prev:prevYear},this.fromGregorianToFiscalMonth({data:result[type]})},getPrevDate:function(date){if(this.isFiscal){var currentFiscalData=this.fromGregorianToFiscalMonth(date),nextFiscalData=this.getPrevFiscalMonth(currentFiscalData.options.start);return this.fromGregorianToFiscalMonth(nextFiscalData)}var month=date.month,year=date.year;return month--,month===-1&&(month=11,--year),{month:month,year:year,options:{name:this.monthNamesShort[month].name}}},getLeftSideDate:function(date,isSingleView){var currentFiscalData,checkedDate,maxDate;return maxDate=this.getMaxDate("weeks"),checkedDate=isSingleView?date:this.getNextDate(date),(!checkedDate||+maxDate.dateId<=+checkedDate.dateId)&&(date=maxDate,isSingleView||(date=this.getPrevDate(date))),this.isFiscal?(currentFiscalData=this.fromGregorianToFiscalMonth(date),this.fromGregorianToFiscalMonth(currentFiscalData)):(date.options={name:this.monthNamesShort[date.month].name},date)},isSelectedWeek:function(date,selectedDate){for(var activeWeek=!1,year=selectedDate.year,month=selectedDate.month,day=selectedDate.day,i=0;i<7;i++){var matchYears=date[i].year===year,matchMonths=date[i].month===month,matchWeeks=date[i].day===day;activeWeek=activeWeek||matchYears&&matchMonths&&matchWeeks}return activeWeek},getStartEndDateOfFiscalYear:function(year){for(var yearData=this.fiscalData.years.data,i=0;i<yearData.length-1;i++){var startDate=yearData[i],currYear=moment(""+startDate,calendarCoreConstants.DATE_FORMAT.DATE_ID).year();if(currYear===year){var nextFiscalYear=yearData[i+1],endDate=this.getPreviousDate(nextFiscalYear);return{startDate:+startDate,endDate:+endDate}}}},getStartEndDateOfFiscalQuarter:function(currDate,quarters){for(var startDate,endDate,i=0;i<quarters.length;i++)if(currDate>=+quarters[i].startDate&&currDate<=+quarters[i].endDate)return startDate=quarters[i].startDate,endDate=quarters[i].endDate,{startDate:+startDate,endDate:+endDate}},fromGregorianToFiscalWeek:function(dateObj,useSelectedDate){var type,week,nextWeek,k,weeks=this.fiscalData.weeks.data,fiscalDate=dateObj.data,maxEndDate=moment(this.getMaxDate("weeks")).add(1,"days").format(calendarCoreConstants.DATE_FORMAT.DATE_ID);for(k=0;k<weeks.length;k++)if(week=+weeks[k]>+maxEndDate&&!useSelectedDate?maxEndDate:weeks[k],nextWeek=+weeks[k+1]>+maxEndDate&&!useSelectedDate?maxEndDate:weeks[k+1],+fiscalDate>=+week&&+fiscalDate<+nextWeek){+fiscalDate===+week?type="first":+fiscalDate===+this.getPreviousDate(nextWeek)&&(type="last"),dateObj.fiscal=week;break}return{type:type,index:k,fiscal:week,nextWeek:nextWeek}},fromGregorianToFiscalMonth:function(date){var i,fiscalMonth,format=calendarCoreConstants.DATE_FORMAT.DATE_ID,dateID=+date.data||+date.dateId,monthArray=this.getMonthNameShort(date.year),lastArrElem=null,fiscalData=this.getFiscalData(),fiscalYears=fiscalData.years.data,fiscalYearsLength=fiscalYears.length,startYear=moment(fiscalYears[0],calendarCoreConstants.DATE_FORMAT.DATE_ID).get("year");for(i=0;i<fiscalYearsLength;i++){if(monthArray&&monthArray.length>0&&(lastArrElem=monthArray[monthArray.length-1]),monthArray=this.getMonthNameShort(startYear),lastArrElem&&monthArray.unshift(lastArrElem),fiscalMonth=this.findFiscalMonth(monthArray,dateID))return{dateId:fiscalMonth.currentDate,data:fiscalMonth.currentDate,options:fiscalMonth.options,year:moment(fiscalMonth.currentDate,format).get("year"),month:moment(fiscalMonth.currentDate,format).get("month"),startDate:moment(fiscalMonth.options.start,format),endDate:moment(fiscalMonth.nextDate,format).subtract(1,"days")};startYear++}},findFiscalMonth:function(monthArray,dateID){var i,format=calendarCoreConstants.DATE_FORMAT.DATE_ID;for(i=0;i<monthArray.length;i++)if(dateID>=+monthArray[i].start&&dateID<=+monthArray[i].end)return{options:monthArray[i],currentDate:monthArray[i].start,nextDate:moment(""+monthArray[i].end,format).add(1,"day").format(format)}},getNextFiscalMonth:function(dateFiscalStr){for(var nextMonth,fiscalMonths=this.fiscalData.months.data,length=fiscalMonths.length,format=calendarCoreConstants.DATE_FORMAT.DATE_ID,i=0;i<length-1;i++)fiscalMonths[i]===dateFiscalStr&&(nextMonth=fiscalMonths[i+1]);return fiscalMonths[length-1]!==dateFiscalStr&&{data:nextMonth,year:moment(nextMonth,format).get("year"),month:moment(nextMonth,format).get("month")}},getPrevFiscalMonth:function(dateFiscalStr){for(var prevMonth,format=calendarCoreConstants.DATE_FORMAT.DATE_ID,fiscalMonths=this.fiscalData.months.data,length=fiscalMonths.length,i=1;i<length;i++)fiscalMonths[i]===dateFiscalStr&&(prevMonth=fiscalMonths[i-1]);return fiscalMonths[0]!==dateFiscalStr&&{data:prevMonth,year:moment(prevMonth,format).get("year"),month:moment(prevMonth,format).get("month")}},getNumberOfPeriods:function(startDate,endDate,type){var num,start,end;return start=moment(startDate,calendarCoreConstants.DATE_FORMAT.DATE_ID),end=moment(endDate,calendarCoreConstants.DATE_FORMAT.DATE_ID),num=end.diff(start,type),num+1}}}]);
angular.module("x1.ui.calendar-core").constant("calendarCoreConstants",{EVENTS:{INPUT_CHANGED:"inputChanged",CALENDAR_CLICK:"calendarClick",CALENDAR_DATE_CLICKED:"x1.ui.calendarDateClicked",CALENDAR_DATA_CHANGED:"x1.ui.calendarDataChanged",CALENDAR_DATA_UPDATE:"x1.ui.calendarDataUpdate",CALENDAR_MIN_MAX_UPDATE:"x1.ui.calendarMinMaxUpdate"},DATE_FORMAT:{DATE_ID:"YYYYMMDD"},VIEWS:{ANY:"ANY",DAY:"DAY",WEEK:"WEEK",MONTH:"MONTH",QUARTER:"QUARTER",YEAR:"YEAR"}});
angular.module("x1.ui.calendar-core").controller("x1CalendarCoreCtrl",["$scope","CalendarCoreDataService","calendarCoreConstants","moment",function($scope,CalendarCoreDataService,calendarCoreConstants,moment){"use strict";function changeDateFormat(date,fromFormat,toFormat){return fromFormat===toFormat?{startDate:date.startDate,endDate:date.endDate}:{startDate:moment(date.startDate,fromFormat).format(toFormat),endDate:moment(date.endDate,fromFormat).format(toFormat)}}function checkNoEndDate(data){$scope.config.noEndDate&&($scope.config.endDate=$scope.config.maxEndDate,$scope.config.view="DAY"===$scope.config.view?"ANY":$scope.config.view,data&&(data.endDate=$scope.config.endDate))}function getDateByType(dateType){var dateFormat=$scope.definition.dateFormat||defaultFormat;return $scope.definition.useSelectedDate?"startDate"===dateType?$scope.definition.useSelectedDate.selectedStartDate:$scope.definition.useSelectedDate.selectedEndDate:moment($scope.definition[dateType],dateFormat).format(defaultFormat)}function init(){var dateFormat=$scope.definition.dateFormat||defaultFormat,offsetTime=$scope.definition.timezone||moment().utcOffset();CalendarCoreDataService.setOffsetDates(offsetTime),$scope.config={endDate:getDateByType("endDate"),startDate:getDateByType("startDate"),maxEndDate:$scope.definition.maxEndDate?moment($scope.definition.maxEndDate,dateFormat).format(defaultFormat):moment().utcOffset(offsetTime).format(defaultFormat),minStartDate:$scope.definition.minStartDate?moment($scope.definition.minStartDate,dateFormat).format(defaultFormat):"20130101",view:$scope.definition.view,noEndDate:$scope.definition.noEndDate,maxDateRange:$scope.definition.maxDateRange,calendarSize:$scope.definition.calendarSize||"md",multiSelection:$scope.definition.multiSelection,singleView:$scope.definition.singleView,useSelectedDate:!!$scope.definition.useSelectedDate,timezone:offsetTime},checkNoEndDate()}var defaultFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID;$scope.$watchGroup(["definition.view","definition.noEndDate"],function(newVal,oldVal){newVal!==oldVal&&(init(),$scope.$broadcast(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,{startDate:$scope.config.startDate,endDate:$scope.config.endDate,type:newVal[0]}))}),$scope.$watchGroup(["definition.minStartDate","definition.maxEndDate","definition.maxDateRange"],function(newVal,oldVal){newVal!==oldVal&&$scope.$broadcast(calendarCoreConstants.EVENTS.CALENDAR_MIN_MAX_UPDATE,{minStartDate:""+newVal[0],maxEndDate:""+newVal[1],maxDateRange:""+newVal[2]})}),$scope.$on(calendarCoreConstants.EVENTS.INPUT_CHANGED,function(e,data){var fromFormat=$scope.definition.dateFormat||defaultFormat,view=data.view;data=changeDateFormat(data,fromFormat,defaultFormat),checkNoEndDate(data),data.type=view,$scope.$broadcast(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,data)}),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_CLICK,function(e,data){var toFormat=$scope.definition.dateFormat||defaultFormat,isClicked=data.isClicked,numPeriods=data.selectedPeriods;e.stopPropagation(),data=changeDateFormat(data,defaultFormat,toFormat),data.endDate=$scope.definition.noEndDate?null:""+data.endDate,data.startDate=""+data.startDate,data.isClicked=isClicked,$scope.config.multiSelection&&(data.numPeriods=numPeriods),$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_DATA_CHANGED,data)}),init()}]);
angular.module("x1.ui.calendar-core").directive("x1CalendarCore",function(){"use strict";return{restrict:"EA",templateUrl:"calendar-core/calendar-core.html",scope:{definition:"=",fiscalData:"="}}});
angular.module("x1.ui.calendar-core").controller("anyCoreCtrl",["$scope","CalendarCoreUiService","calendarCoreConstants","moment",function($scope,CalendarCoreUiService,calendarCoreConstants,moment){"use strict";var CalendarUiService=angular.copy(CalendarCoreUiService),dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID;$scope.singleView=$scope.definition.singleView,$scope.dayShortNames="x1UiNgCalendarCore.dayShortNames.",$scope.monthShortNames="x1UiNgCalendarCore.monthShortNames.",$scope.anyDay={init:function(startDateStr,endDateStr){var dates=this.checkMaxRange(startDateStr,endDateStr);startDateStr=dates.startDateStr,endDateStr=dates.endDateStr,this.isSingle=$scope.singleView,this.minDate=CalendarUiService.getMinDate("weeks"),this.maxDate=CalendarUiService.getMaxDate("weeks"),this.startDate=startDateStr?CalendarUiService.getDateObjFromStr(startDateStr):{},this.endDate=endDateStr?CalendarUiService.getDateObjFromStr(endDateStr):{},this.getLeftRight(),this.updateCalendar()},checkMaxRange:function(startDateStr,endDateStr){var startDate=moment(startDateStr,dateFormat),endDate=moment(endDateStr,dateFormat);return $scope.config.maxDateRange?(endDate.diff(startDate,"days")>$scope.config.maxDateRange&&(endDate=startDate.add($scope.config.maxDateRange,"days")),{startDateStr:startDateStr,endDateStr:endDate.format(dateFormat)}):{startDateStr:startDateStr,endDateStr:endDateStr}},getLeftRight:function(){this.leftDate=CalendarUiService.getLeftSideDate(this.startDate,$scope.singleView),this.processRightPart(CalendarUiService.getNextDate,this.leftDate),$scope.dayNamesShortLeft=CalendarUiService.getDayNameShort(this.leftDate),this.isSingle||($scope.dayNamesShortRight=CalendarUiService.getDayNameShort(this.rightDate))},next:function(){this.leftDate=CalendarUiService.getNextDate(this.leftDate),this.processRightPart(CalendarUiService.getNextDate,this.rightDate),this.updateCalendar()},prevYear:function(){var prevDate;$scope.fiscalData?(this.leftDate=CalendarUiService.getMonthFromPrevNextYear(this.leftDate,"prev"),this.processRightPart(CalendarUiService.getNextDate,this.leftDate)):(this.leftDate.year-=1,this.rightDate.year-=1),prevDate=CalendarUiService.checkMinDate({leftDate:this.leftDate,rightDate:this.rightDate,minDate:this.minDate,isSingle:this.isSingle}),this.leftDate=prevDate.leftDate,this.rightDate=prevDate.rightDate,this.updateCalendar()},nextYear:function(){var nextDate,config;$scope.fiscalData?(this.leftDate=CalendarUiService.getMonthFromPrevNextYear(this.leftDate,"next"),this.processRightPart(CalendarUiService.getNextDate,this.leftDate)):(this.leftDate.year+=1,this.rightDate.year+=1),config={leftDate:this.leftDate,rightDate:this.rightDate,maxDate:this.maxDate,singleView:$scope.singleView},nextDate=CalendarUiService.checkMaxDate(config),this.leftDate=nextDate.leftDate,this.rightDate=nextDate.rightDate,this.updateCalendar()},prev:function(){this.leftDate=CalendarUiService.getPrevDate(this.leftDate),this.processRightPart(CalendarUiService.getPrevDate,this.rightDate),this.updateCalendar()},isDisableNext:function(){var compareDate=$scope.singleView?this.leftDate:this.rightDate;return compareDate.year>=this.maxDate.year&&compareDate.month>=this.maxDate.month},isDisablePrevYear:function(){var prevYear=+this.leftDate.year,minYear=+this.minDate.year;return prevYear<=minYear},isDisableNextYear:function(){var compareDate=$scope.singleView?this.leftDate:this.rightDate,nextYear=+compareDate.year,maxYear=+this.maxDate.year,result=nextYear>=maxYear;return $scope.fiscalData?result||!CalendarUiService.getMonthFromPrevNextYear(this.leftDate,"next"):result},isDisablePrev:function(){return this.leftDate.year<=this.minDate.year&&this.leftDate.month<=this.minDate.month},isStartDate:function(date){var inputDate=+date.data,startDate=+this.startDate.data;return inputDate===startDate},isEndDate:function(date){var inputDate=+date.data;if(!this.endDate)return!1;var endDate=+this.endDate.data;return inputDate===endDate},isInRange:function(date){var inputDate=+date.data,startDate=+this.startDate.data;if(!this.endDate)return!1;var endDate=+this.endDate.data;return inputDate>startDate&&inputDate<endDate},updateCalendar:function(){this.calendarLeft=CalendarUiService.getDatesArray(this.leftDate,null,$scope.config.timezone),this.isSingle||(this.calendarRight=CalendarUiService.getDatesArray(this.rightDate,null,$scope.config.timezone))},maxDateRange:function(obj){if(this.startDateSelected||!$scope.config.maxDateRange)return!1;var startDate=moment(this.startDate.data,"YYYYMMDD"),clickedDate=moment(obj.data,"YYYYMMDD");return startDate.diff(clickedDate,"days")>$scope.config.maxDateRange&&(this.startDate=obj,this.endDate=obj,this.startDateSelected=!0,!0)},click:function(obj){$scope.config.noEndDate?(this.startDateSelected=!0,this.startDate=obj):this.maxDateRange(obj)||(!this.startDateSelected&&+obj.data>+this.endDate.data?(this.startDate=obj,this.endDate=obj,this.startDateSelected=!0):(+obj.data<+this.startDate.data?(this.endDate=this.startDate,this.startDate=obj):this.endDate=obj,this.startDateSelected=!1)),this.applyDates(!0)},applyDates:function(isClicked){var endDate,startDate;startDate=moment(),startDate.set("year",this.startDate.year),startDate.set("month",this.startDate.month),startDate.set("date",this.startDate.day),startDate=startDate.format(dateFormat),this.endDate&&(endDate=moment(),endDate.set("year",this.endDate.year),endDate.set("month",this.endDate.month),endDate.set("date",this.endDate.day),endDate=endDate.format(dateFormat)),$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_CLICK,{startDate:startDate,endDate:endDate,anySelectionDone:!this.startDateSelected,isClicked:isClicked,selectedPeriods:CalendarUiService.getNumberOfPeriods(startDate,endDate,"days")})},processRightPart:function(fn,arg){this.rightDate=this.isSingle?{}:fn.call(CalendarUiService,arg)}},CalendarUiService.setFiscalData($scope.fiscalData),CalendarUiService.setMinDate($scope.config.minStartDate),CalendarUiService.setMaxDate($scope.config.maxEndDate),$scope.anyDay.init($scope.config.startDate,$scope.config.endDate),$scope.anyDay.applyDates(),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,function(e,date){date.type===calendarCoreConstants.VIEWS.ANY&&$scope.anyDay.init(date.startDate,date.endDate)}),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_MIN_MAX_UPDATE,function(e,date){CalendarUiService.setMinDate(date.minStartDate),CalendarUiService.setMaxDate(date.maxEndDate),$scope.anyDay.minDate=CalendarUiService.getMinDate("weeks"),$scope.anyDay.maxDate=CalendarUiService.getMaxDate("weeks"),$scope.config.maxDateRange=+date.maxDateRange,$scope.anyDay.updateCalendar()})}]);
angular.module("x1.ui.calendar-core").directive("calendarCoreAny",function(){"use strict";return{restrict:"EA",templateUrl:"calendar-core/any/any.html",controller:"anyCoreCtrl"}});
angular.module("x1.ui.calendar-core").directive("calendarCoreDay",function(){"use strict";return{restrict:"EA",templateUrl:"calendar-core/day/day.html",controller:"dayCoreCtrl"}});
angular.module("x1.ui.calendar-core").controller("dayCoreCtrl",["$scope","CalendarCoreUiService","calendarCoreConstants",function($scope,CalendarCoreUiService,calendarCoreConstants){"use strict";var CalendarUiService=angular.copy(CalendarCoreUiService);$scope.singleView=$scope.config.singleView,$scope.dayShortNames="x1UiNgCalendarCore.dayShortNames.",$scope.monthShortNames="x1UiNgCalendarCore.monthShortNames.",$scope.calendarDay={init:function(dateId){this.isSingle=$scope.singleView,this.minDate=CalendarUiService.getMinDate("weeks"),this.maxDate=CalendarUiService.getMaxDate("weeks"),this.selectedDate=CalendarUiService.getDateObjFromStr(dateId),this.getLeftRight(),this.updateCalendar()},getLeftRight:function(){this.leftDate=CalendarUiService.getLeftSideDate(this.selectedDate,$scope.singleView),this.processRightPart(CalendarUiService.getNextDate,this.leftDate),$scope.dayNamesShortLeft=CalendarUiService.getDayNameShort(this.leftDate),this.isSingle||($scope.dayNamesShortRight=CalendarUiService.getDayNameShort(this.rightDate))},next:function(){this.leftDate=CalendarUiService.getNextDate(this.leftDate),this.processRightPart(CalendarUiService.getNextDate,this.rightDate),this.updateCalendar()},prev:function(){this.leftDate=CalendarUiService.getPrevDate(this.leftDate),this.processRightPart(CalendarUiService.getPrevDate,this.rightDate),this.updateCalendar()},prevYear:function(){var prevDate;$scope.fiscalData?(this.leftDate=CalendarUiService.getMonthFromPrevNextYear(this.leftDate,"prev"),this.processRightPart(CalendarUiService.getNextDate,this.leftDate)):(this.leftDate.year-=1,this.rightDate.year-=1),prevDate=CalendarUiService.checkMinDate({leftDate:this.leftDate,rightDate:this.rightDate,minDate:this.minDate,isSingle:this.isSingle}),this.leftDate=prevDate.leftDate,this.rightDate=prevDate.rightDate,this.updateCalendar()},nextYear:function(){var nextDate,config;$scope.fiscalData?(this.leftDate=CalendarUiService.getMonthFromPrevNextYear(this.leftDate,"next"),this.processRightPart(CalendarUiService.getNextDate,this.leftDate)):(this.leftDate.year+=1,this.rightDate.year+=1),config={leftDate:this.leftDate,rightDate:this.rightDate,maxDate:this.maxDate,singleView:$scope.singleView},nextDate=CalendarUiService.checkMaxDate(config),this.leftDate=nextDate.leftDate,this.rightDate=nextDate.rightDate,this.updateCalendar()},isDisableNext:function(){var compareDate=$scope.singleView?this.leftDate:this.rightDate;return compareDate.year>=this.maxDate.year&&compareDate.month>=this.maxDate.month},isDisablePrev:function(){return this.leftDate.year<=this.minDate.year&&this.leftDate.month<=this.minDate.month},isDisablePrevYear:function(){var prevYear=+this.leftDate.year,minYear=+this.minDate.year;return prevYear<=minYear},isDisableNextYear:function(){var compareDate=$scope.singleView?this.leftDate:this.rightDate,nextYear=+compareDate.year,maxYear=+this.maxDate.year;return nextYear>=maxYear},isSelectedDay:function(day,month,year){var isDay=day===this.selectedDate.day,isMonth=month===this.selectedDate.month,isYear=year===this.selectedDate.year;return isDay&&isMonth&&isYear},updateCalendar:function(){this.calendarLeft=CalendarUiService.getDatesArray(this.leftDate,null,$scope.config.timezone),this.isSingle||(this.calendarRight=CalendarUiService.getDatesArray(this.rightDate,null,$scope.config.timezone))},click:function(obj){this.selectedDate=obj,this.applyDates(!0);var date=this.selectedDate.data;$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_DATE_CLICKED,{startDate:date,endDate:date})},applyDates:function(isClicked){var date=this.selectedDate.data;$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_CLICK,{startDate:date,endDate:date,isClicked:isClicked})},processRightPart:function(fn,arg){this.rightDate=this.isSingle?{}:fn.call(CalendarUiService,arg)}},CalendarUiService.setFiscalData($scope.fiscalData),CalendarUiService.setMinDate($scope.config.minStartDate),CalendarUiService.setMaxDate($scope.config.maxEndDate),$scope.calendarDay.init($scope.config.startDate),$scope.calendarDay.applyDates(),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,function(e,date){date.type===calendarCoreConstants.VIEWS.DAY&&($scope.calendarDay.init(date.startDate),$scope.calendarDay.applyDates())})}]);
angular.module("x1.ui.calendar-core").directive("calendarCoreMonth",function(){"use strict";return{restrict:"EA",templateUrl:"calendar-core/month/month.html",controller:"monthCoreCtrl"}});
angular.module("x1.ui.calendar-core").controller("monthCoreCtrl",["$scope","CalendarCoreUiService","moment","calendarCoreConstants",function($scope,CalendarCoreUiService,moment,calendarCoreConstants){"use strict";var dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID,CalendarUiService=angular.copy(CalendarCoreUiService);$scope.monthShortNames="x1UiNgCalendarCore.monthShortNames.",$scope.calendarMonth={init:function(dateObj){this.minDate=CalendarUiService.getMinDate("months"),this.maxDate=CalendarUiService.getMaxDate("months"),this.selectedDate=CalendarUiService.getDateObjFromStr(dateObj.startDate),this.startDate=CalendarUiService.getStartDate(dateObj.startDate||dateObj.endDate),this.endDate=CalendarUiService.getEndDate(dateObj.endDate||dateObj.startDate,"months",$scope.config.useSelectedDate),this.activeYear=this.selectedDate.year,this.months=CalendarUiService.getMonthNameShort(this.activeYear)},next:function(){++this.activeYear,this.months=CalendarUiService.getMonthNameShort(this.activeYear)},prev:function(){--this.activeYear,this.months=CalendarUiService.getMonthNameShort(this.activeYear)},isDisableNext:function(){return this.activeYear>=this.maxDate.year},isDisablePrev:function(){return this.activeYear<=this.minDate.year},isActive:function(index,month){if(CalendarUiService.isFiscal)return $scope.config.multiSelection?+month.start>=+this.startDate&&+month.start<=+this.endDate:+this.selectedDate.data>=+month.start&&+this.selectedDate.data<=+month.end;var date=moment({month:index,year:this.activeYear}).startOf("month").format(dateFormat);return $scope.config.multiSelection?+date>=+this.startDate&&+date<=+this.endDate:this.selectedDate.year===this.activeYear&&this.selectedDate.month===index},isStartEndMonth:function(index,month){return CalendarUiService.isFiscal?this.isFiscalStartEndMonth(index,month):this.isGregorianStartEndMonth(index)},isGregorianStartEndMonth:function(index){var startDate,endDate,isStartMonth,isEndMonth;return startDate=moment(this.startDate,dateFormat),endDate=moment(this.endDate,dateFormat),isStartMonth=index===startDate.month()&&this.activeYear===startDate.year(),isEndMonth=index===endDate.month()&&this.activeYear===endDate.year(),$scope.config.multiSelection?isStartMonth||isEndMonth:isStartMonth},isFiscalStartEndMonth:function(index,month){var isStartMonth,isEndMonth;return isStartMonth=+this.startDate>=+month.start&&+this.startDate<=+month.end,isEndMonth=+this.endDate>=+month.start&&+this.endDate<=+month.end,$scope.config.multiSelection?isStartMonth||isEndMonth:isStartMonth},isDisable:function(index){if(CalendarUiService.isFiscal){var maxDateId=moment(this.maxDate).format(dateFormat),minDateId=moment(this.minDate).format(dateFormat);return this.maxDate.year<=this.activeYear&&+maxDateId<+$scope.calendarMonth.months[index].start||this.minDate.year>=this.activeYear&&+minDateId>+$scope.calendarMonth.months[index].end}return this.maxDate.year<=this.activeYear&&this.maxDate.month<index||this.minDate.year>=this.activeYear&&this.minDate.month>index},click:function(monthIndex,month){CalendarUiService.isFiscal?(this.selectedDate=CalendarUiService.getDateObjFromStr(month.start),!$scope.config.multiSelection||!this.startDateSelected&&+month.start>+this.endDate?(this.startDate=month.start,this.endDate=month.end,this.startDateSelected=!0):(+month.start<+this.startDate?(this.endDate=this.startDate,this.startDate=month.start):this.endDate=month.end,this.startDateSelected=!1)):(this.selectedDate={month:monthIndex,year:this.activeYear},!$scope.config.multiSelection||!this.startDateSelected&&+moment(this.selectedDate).format(dateFormat)>+this.endDate?(this.startDate=moment(this.selectedDate).startOf("month").format(dateFormat),this.endDate=moment(this.selectedDate).endOf("month").format(dateFormat),this.startDateSelected=!0):(+moment(this.selectedDate).format(dateFormat)<+this.startDate?(this.endDate=moment(this.startDate,dateFormat).endOf("month").format(dateFormat),this.startDate=moment(this.selectedDate).startOf("month").format(dateFormat)):this.endDate=moment(this.selectedDate).endOf("month").format(dateFormat),this.startDateSelected=!1)),this.applyDates(!0)},getFiscalStartEndDate:function(){var startDate,endDate,i,currMonth,startPeriod,endPeriod,endFiscal,length=$scope.calendarMonth.months.length;for(endFiscal=$scope.config.multiSelection?this.endDate:this.startDate,i=0;i<length;i++)currMonth=$scope.calendarMonth.months[i],this.startDate>=+currMonth.start&&this.startDate<=+currMonth.end&&(startPeriod=currMonth.periodNum,startDate=currMonth.start),endFiscal>=+currMonth.start&&endFiscal<=+currMonth.end&&(endPeriod=currMonth.periodNum,endDate=+currMonth.end>+$scope.config.maxEndDate?$scope.config.maxEndDate:currMonth.end);return{endDate:endDate||$scope.config.maxEndDate,startDate:startDate,selectedMonths:endPeriod-startPeriod+1}},applyDates:function(isClicked){var startDate,endDate,lastDay,resultDate,lastDayDate,maxDate,selectedMonths,eventObj,firstDayDate,minDate,startDay;CalendarUiService.isFiscal?(resultDate=this.getFiscalStartEndDate(),startDate=resultDate.startDate,endDate=resultDate.endDate,selectedMonths=resultDate.selectedMonths):(lastDayDate=$scope.config.multiSelection?moment(this.endDate,dateFormat):moment(this.startDate,dateFormat),lastDayDate=lastDayDate.endOf("month"),maxDate=moment(this.maxDate),lastDay=lastDayDate.isAfter(maxDate)?maxDate.format(dateFormat):lastDayDate.format(dateFormat),firstDayDate=moment(this.startDate,dateFormat).startOf("month"),minDate=moment(this.minDate),startDay=firstDayDate.isAfter(minDate)?firstDayDate.format(dateFormat):minDate.format(dateFormat),startDate=startDay,endDate=lastDay),endDate=+endDate>+$scope.config.maxEndDate?$scope.config.maxEndDate:endDate,startDate=+startDate<+$scope.config.minStartDate?$scope.config.minStartDate:startDate,eventObj={startDate:startDate,endDate:endDate,isClicked:isClicked},$scope.config.multiSelection&&(eventObj.selectedPeriods=CalendarUiService.isFiscal?selectedMonths:CalendarCoreUiService.getNumberOfPeriods(startDate,endDate,"months")),$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_CLICK,eventObj)}},CalendarUiService.setFiscalData($scope.fiscalData),CalendarUiService.setMinDate($scope.config.minStartDate),CalendarUiService.setMaxDate($scope.config.maxEndDate),$scope.calendarMonth.init($scope.config),$scope.calendarMonth.applyDates(),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,function(e,date){date.type===calendarCoreConstants.VIEWS.MONTH&&($scope.calendarMonth.init(date),$scope.calendarMonth.applyDates())})}]);
angular.module("x1.ui.calendar-core").directive("calendarCoreQuarter",function(){"use strict";return{restrict:"EA",templateUrl:"calendar-core/quarter/quarter.html",controller:"quarterCoreCtrl"}});
angular.module("x1.ui.calendar-core").controller("quarterCoreCtrl",["$scope","CalendarCoreUiService","CalendarCoreQuarterService","calendarCoreConstants",function($scope,CalendarCoreUiService,CalendarCoreQuarterService,calendarCoreConstants){"use strict";var dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID,CalendarUiService=angular.copy(CalendarCoreUiService),CalendarQuarterService=angular.copy(CalendarCoreQuarterService);$scope.monthShortNames="x1UiNgCalendarCore.monthShortNames.",$scope.quarterNames="x1UiNgCalendarCore.quarterNames.",$scope.calendarQuarter={init:function(dateStr){this.minDate=CalendarUiService.getMinDate("quarters"),this.maxDate=CalendarUiService.getMaxDate("quarters"),this.selectedDate=CalendarUiService.getDateObjFromStr(dateStr),this.activeYear=this.selectedDate.year,this.quartersByYears=CalendarQuarterService.getQuarters(this.minDate,this.maxDate),this.quarters=this.quartersByYears[this.activeYear],this.years=[];for(var i=this.minDate.year;i<=this.minDate.year;i++)this.years.push(i)},next:function(){++this.activeYear,this.quarters=this.quartersByYears[this.activeYear]},prev:function(){--this.activeYear,this.quarters=this.quartersByYears[this.activeYear]},isDisableNext:function(){return this.activeYear>=this.maxDate.year},isDisablePrev:function(){return this.activeYear<=this.minDate.year},isActive:function(quarterIndex,quarter){function isStartEnd(){return $scope.config.multiSelection&&(+currentQuarter.startDate===that.startDate||+currentQuarter.endDate===that.endDate)}var date=+this.selectedDate.data,currentIndex=CalendarUiService.isFiscal?CalendarUiService.getDateObjFromStr(quarter.startDate).quarter:quarterIndex,currentQuarter=$scope.calendarQuarter.quarters[currentIndex],that=this;return CalendarUiService.isFiscal?isStartEnd()||date>=+quarter.startDate&&date<+quarter.endDate:isStartEnd()||this.selectedDate.year===this.activeYear&&this.selectedDate.quarter===quarterIndex},isInRange:function(quarterIndex,quarter){var currentIndex=CalendarUiService.isFiscal?CalendarUiService.getDateObjFromStr(quarter.startDate).quarter:quarterIndex,currentQuarter=$scope.calendarQuarter.quarters[currentIndex];return $scope.config.multiSelection&&+currentQuarter.startDate>=+this.startDate&&+currentQuarter.endDate<=+this.endDate},isDisable:function(index){var maxDateId=moment(this.maxDate).format(dateFormat),minDateId=moment(this.minDate).format(dateFormat);return this.maxDate.year<=this.activeYear&&+maxDateId<+$scope.calendarQuarter.quarters[index].startDate||this.minDate.year>=this.activeYear&&+minDateId>+$scope.calendarQuarter.quarters[index].endDate},click:function(quarterIndex,quarter){CalendarUiService.isFiscal?this.selectedDate=CalendarUiService.getDateObjFromStr(quarter.startDate):this.selectedDate={quarter:quarterIndex,year:this.activeYear},this.applyDates(!0)},applyDates:function(isClicked){function isNewRangeStart(clickedDate){return!$scope.config.multiSelection||!that.startDateSelected&&(!that.endDate||+clickedDate.startDate>that.endDate)}function setQuarterRange(){clickedDate=$scope.calendarQuarter.quarters[that.selectedDate.quarter],isNewRangeStart(clickedDate)?(startDate=$scope.calendarQuarter.quarters[that.selectedDate.quarter].startDate,endDate=$scope.calendarQuarter.quarters[that.selectedDate.quarter].endDate,that.startDateSelected=!0):(+clickedDate.startDate<that.startDate?(startDate=$scope.calendarQuarter.quarters[that.selectedDate.quarter].startDate,endDate=that.endDate):(startDate=that.startDate,endDate=clickedDate.endDate),that.startDateSelected=!1)}var startDate,endDate,currDate,clickedDate,startEndDate,endYear,that=this;CalendarUiService.isFiscal?(currDate=+this.selectedDate.data,isClicked?setQuarterRange():(startEndDate=CalendarUiService.getStartEndDateOfFiscalQuarter(currDate,$scope.calendarQuarter.quarters),$scope.config.multiSelection&&(endYear=moment($scope.config.endDate,calendarCoreConstants.DATE_FORMAT.DATE_ID).year(),startEndDate.endDate=CalendarUiService.getStartEndDateOfFiscalQuarter(+$scope.config.endDate,this.quartersByYears[endYear]).endDate),startDate=startEndDate.startDate,endDate=startEndDate.endDate)):setQuarterRange(),this.endDate=+endDate>+$scope.config.maxEndDate?+$scope.config.maxEndDate:endDate,this.startDate=+startDate<+$scope.config.minStartDate?+$scope.config.minStartDate:startDate,$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_CLICK,{startDate:this.startDate,endDate:this.endDate,isClicked:isClicked})}},CalendarUiService.setFiscalData($scope.fiscalData),CalendarQuarterService.setFiscalData($scope.fiscalData),CalendarUiService.setMinDate($scope.config.minStartDate),CalendarUiService.setMaxDate($scope.config.maxEndDate),$scope.calendarQuarter.init($scope.config.startDate),$scope.calendarQuarter.applyDates(),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,function(e,date){date.type===calendarCoreConstants.VIEWS.QUARTER&&($scope.calendarQuarter.init(date.startDate),$scope.calendarQuarter.applyDates())})}]);
angular.module("x1.ui.calendar-core").directive("calendarCoreWeek",function(){"use strict";return{restrict:"EA",templateUrl:"calendar-core/week/week.html",controller:"weekCoreCtrl"}});
angular.module("x1.ui.calendar-core").controller("weekCoreCtrl",["$scope","CalendarCoreUiService","moment","calendarCoreConstants",function($scope,CalendarCoreUiService,moment,calendarCoreConstants){"use strict";var dateFormat=calendarCoreConstants.DATE_FORMAT.DATE_ID,CalendarUiService=angular.copy(CalendarCoreUiService);$scope.singleView=$scope.config.singleView,$scope.dayShortNames="x1UiNgCalendarCore.dayShortNames.",$scope.monthShortNames="x1UiNgCalendarCore.monthShortNames.",$scope.calendarWeek={init:function(dateObj){this.hoveredDate={},this.fiscalDateHover={},this.fiscalDateSelected={},this.isSingle=$scope.singleView,this.minDate=CalendarUiService.getMinDate("weeks"),this.maxDate=CalendarUiService.getMaxDate("weeks"),this.selectedDate=CalendarUiService.getDateObjFromStr(dateObj.startDate),this.monthNamesShort=CalendarUiService.getMonthNameShort(this.selectedDate.year),this.getStartEndDate(dateObj),this.getLeftRight(),this.updateCalendar()},getStartEndDate:function(dateObj){var startDate,endDate,startDateFiscal,endDateFiscal,startMonth,endMonth,startWeek,endWeek;dateObj.startDate=dateObj.startDate||dateObj.endDate,dateObj.endDate=dateObj.endDate||dateObj.startDate,startDate=CalendarCoreUiService.getDateObjFromStr(dateObj.startDate),endDate=CalendarCoreUiService.getDateObjFromStr(dateObj.endDate),CalendarUiService.isFiscal?(endDate=$scope.config.multiSelection?endDate:startDate,startMonth=CalendarUiService.fromGregorianToFiscalMonth(startDate),endMonth=CalendarUiService.fromGregorianToFiscalMonth(endDate),startWeek=CalendarUiService.fromGregorianToFiscalWeek(startDate,$scope.config.useSelectedDate),endWeek=CalendarUiService.fromGregorianToFiscalWeek(endDate,$scope.config.useSelectedDate),startDateFiscal={data:{fiscalData:startMonth,fiscal:startWeek.fiscal}},endDateFiscal={data:{fiscalData:endMonth,fiscal:endWeek.fiscal}},this.startDate=moment(CalendarUiService.getStartDate(startDateFiscal),dateFormat),this.endDate=moment(CalendarUiService.getWeekEndDate(endDateFiscal,$scope.config.useSelectedDate),dateFormat),this.fiscalDateSelected={data:startWeek.fiscal,fiscalMonth:startMonth.data},this.startFiscalWeek=startWeek.index,this.endFiscalWeek=endWeek.index):(this.startDate=moment(CalendarUiService.getStartDate(dateObj.startDate),dateFormat),this.endDate=moment(CalendarUiService.getEndDate(dateObj.endDate),dateFormat))},getLeftRight:function(){this.leftDate=CalendarUiService.getLeftSideDate(this.selectedDate,$scope.singleView),this.processRightPart(CalendarUiService.getNextDate,this.leftDate),$scope.dayNamesShortLeft=CalendarUiService.getDayNameShort(this.leftDate),this.isSingle||($scope.dayNamesShortRight=CalendarUiService.getDayNameShort(this.rightDate))},next:function(){this.leftDate=CalendarUiService.getNextDate(this.leftDate),this.processRightPart(CalendarUiService.getNextDate,this.rightDate),this.updateCalendar()},prev:function(){this.leftDate=CalendarUiService.getPrevDate(this.leftDate),this.processRightPart(CalendarUiService.getPrevDate,this.rightDate),this.updateCalendar()},prevYear:function(){var prevDate;$scope.fiscalData?(this.leftDate=CalendarUiService.getMonthFromPrevNextYear(this.leftDate,"prev"),this.processRightPart(CalendarUiService.getNextDate,this.leftDate)):(this.leftDate.year-=1,this.rightDate.year-=1),prevDate=CalendarUiService.checkMinDate({leftDate:this.leftDate,rightDate:this.rightDate,minDate:this.minDate,singleView:$scope.singleView}),this.leftDate=prevDate.leftDate,this.rightDate=prevDate.rightDate,this.updateCalendar()},nextYear:function(){var nextDate,config;$scope.fiscalData?(this.leftDate=CalendarUiService.getMonthFromPrevNextYear(this.leftDate,"next"),this.processRightPart(CalendarUiService.getNextDate,this.leftDate)):(this.leftDate.year+=1,this.rightDate.year+=1),config={leftDate:this.leftDate,rightDate:this.rightDate,maxDate:this.maxDate,singleView:$scope.singleView},nextDate=CalendarUiService.checkMaxDate(config),this.leftDate=nextDate.leftDate,this.rightDate=nextDate.rightDate,this.updateCalendar()},isDisableNext:function(){var compareDate=$scope.singleView?this.leftDate:this.rightDate;return compareDate.year>=this.maxDate.year&&compareDate.month>=this.maxDate.month},isDisablePrev:function(){return this.leftDate.year<=this.minDate.year&&this.leftDate.month<=this.minDate.month},isDisablePrevYear:function(){var prevYear=+this.leftDate.year,minYear=+this.minDate.year;return prevYear<=minYear},isDisableNextYear:function(){var compareDate=$scope.singleView?this.leftDate:this.rightDate,nextYear=+compareDate.year,maxYear=+this.maxDate.year;return nextYear>=maxYear},isSelectedWeek:function(date){return!CalendarUiService.isFiscal&&($scope.config.multiSelection?+moment(date[0]).format(dateFormat)>=this.startDate.format(dateFormat)&&+moment(date[6]).format(dateFormat)<=this.endDate.format(dateFormat):CalendarUiService.isSelectedWeek(date,this.selectedDate))},updateCalendar:function(){this.calendarLeft=CalendarUiService.getDatesArray(this.leftDate,$scope.config.useSelectedDate,$scope.config.timezone),this.isSingle||(this.calendarRight=CalendarUiService.getDatesArray(this.rightDate,$scope.config.useSelectedDate,$scope.config.timezone))},checkNoEndDate:function(date){return $scope.config.noEndDate&&+date>+this.startDate.startOf("week").format(dateFormat)},inMultiSelection:function(date){return $scope.config.multiSelection&&date>this.startDate.format(dateFormat)&&date<this.endDate.format(dateFormat)},isFiscalWeekHover:function(fiscalData){return!!CalendarUiService.isFiscal&&this.fiscalDateHover.data===fiscalData},addHover:function(data){if(CalendarUiService.isFiscal)return!1;var selectedDate=data[0];this.hoveredDate={year:selectedDate.year,month:selectedDate.month,day:selectedDate.day}},removeHover:function(){return!CalendarUiService.isFiscal&&void(this.hoveredDate={})},isHoveredWeek:function(date){return!CalendarUiService.isFiscal&&CalendarUiService.isSelectedWeek(date,this.hoveredDate)},isFiscalWeekSelected:function(fiscalData){return!!CalendarUiService.isFiscal&&($scope.config.multiSelection?+fiscalData>=+this.startDate.format(dateFormat)&&+fiscalData<=+this.endDate.format(dateFormat):this.fiscalDateSelected.data===fiscalData)},addFiscalHover:function(fiscalData,type){this.fiscalDateHover={data:fiscalData,type:type}},removeFiscalHover:function(){this.fiscalDateHover={}},addFiscalSelected:function(fiscalData,fiscalMonth){this.fiscalDateSelected={data:fiscalData,fiscalMonth:fiscalMonth}},fiscalClickHandler:function(obj){var endOfWeek,fiscalMonth="left"===obj.type?this.leftDate.data:this.rightDate.data;this.addFiscalSelected(obj.data.fiscal,fiscalMonth),this.selectedDate={},!$scope.config.multiSelection||!this.startDateSelected&&+this.fiscalDateSelected.data>+this.endDate.format(dateFormat)?(this.startDate=moment(CalendarUiService.getStartDate(obj),dateFormat),this.endDate=moment(CalendarUiService.getWeekEndDate(obj,!1),dateFormat),this.startFiscalWeek=this.endFiscalWeek=obj.data.week,this.startDateSelected=!0):(+this.fiscalDateSelected.data<+this.startDate.format(dateFormat)?(endOfWeek={data:{fiscal:this.startDate.format(dateFormat)}},this.endDate=moment(CalendarUiService.getWeekEndDate(endOfWeek,!1),dateFormat),this.startDate=moment(CalendarUiService.getStartDate(obj),dateFormat),this.startFiscalWeek=obj.data.week,this.endFiscalWeek=endOfWeek.index):(this.endDate=moment(CalendarUiService.getWeekEndDate(obj,!1),dateFormat),this.endFiscalWeek=obj.data.week),this.startDateSelected=!1)},clickHandler:function(obj){this.selectedDate=obj.data,!$scope.config.multiSelection||!this.startDateSelected&&+moment(this.selectedDate).format(dateFormat)>+this.endDate.format(dateFormat)?(this.startDate=moment(this.selectedDate).startOf("week"),this.endDate=moment(this.selectedDate).endOf("week"),this.startDateSelected=!0):(+moment(this.selectedDate).format(dateFormat)<+this.startDate.format(dateFormat)?(this.endDate=this.startDate.endOf("week"),this.startDate=moment(this.selectedDate).startOf("week")):this.endDate=moment(this.selectedDate).endOf("week"),this.startDateSelected=!1)},click:function(obj){CalendarUiService.isFiscal?this.fiscalClickHandler(obj):this.clickHandler(obj),this.applyDates(!0)},applyDates:function(isClicked){var startDate,endDate,eventObj;CalendarUiService.isFiscal?(startDate=+this.startDate.format(dateFormat),endDate=+this.endDate.format(dateFormat)):(startDate=+this.startDate.startOf("week").format(dateFormat),endDate=$scope.config.multiSelection?this.endDate:this.startDate,endDate=+endDate.endOf("week").format(dateFormat));var maxDate=+moment(this.maxDate).format(dateFormat),minDate=+moment(this.minDate).format(dateFormat);endDate>maxDate&&(endDate=maxDate),startDate<minDate&&(startDate=minDate),eventObj={startDate:startDate,endDate:endDate,isClicked:isClicked},$scope.config.multiSelection&&(eventObj.selectedPeriods=CalendarUiService.isFiscal?this.endFiscalWeek-this.startFiscalWeek+1:CalendarCoreUiService.getNumberOfPeriods(startDate,endDate,"weeks")),$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_CLICK,eventObj)},processRightPart:function(fn,arg){this.rightDate=this.isSingle?{}:fn.call(CalendarUiService,arg)}},CalendarUiService.setFiscalData($scope.fiscalData),CalendarUiService.setMinDate($scope.config.minStartDate),CalendarUiService.setMaxDate($scope.config.maxEndDate),$scope.calendarWeek.init($scope.config),$scope.calendarWeek.applyDates(),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,function(e,date){date.type===calendarCoreConstants.VIEWS.WEEK&&($scope.calendarWeek.init(date),$scope.calendarWeek.applyDates())})}]);
angular.module("x1.ui.calendar-core").directive("calendarCoreYear",function(){"use strict";return{restrict:"EA",templateUrl:"calendar-core/year/year.html",controller:"yearCoreCtrl"}});
angular.module("x1.ui.calendar-core").controller("yearCoreCtrl",["$scope","CalendarCoreUiService","calendarCoreConstants",function($scope,CalendarCoreUiService,calendarCoreConstants){"use strict";var CalendarUiService=angular.copy(CalendarCoreUiService);$scope.calendarYear={init:function(dateStr){this.minDate=CalendarUiService.getMinDate("years"),this.maxDate=CalendarUiService.getMaxDate("years"),this.curentView=0,this.isFiscal=CalendarUiService.isFiscal,this.selectedDate=CalendarUiService.getDateObjFromStr(dateStr),this.setYearsArray()},getMaxYear:function(){return this.maxDate.year},setYearsArray:function(){var k=0,j=0;this.yearsArr=[],this.yearsArr[j]=[];for(var i=this.minDate.year;i<=this.getMaxYear();i++)0!==k&&k%12===0&&(j++,this.yearsArr[j]=[]),this.yearsArr[j].push(i),k++;this.years=this.yearsArr[this.curentView]},isSelected:function(year){var isStartEnd,startYear,endYear;return $scope.config.multiSelection&&(startYear=moment(this.startDate,calendarCoreConstants.DATE_FORMAT.DATE_ID).year(),endYear=moment(this.endDate,calendarCoreConstants.DATE_FORMAT.DATE_ID).year(),isStartEnd=startYear===year||endYear===year),this.selectedDate.year===year||isStartEnd},isInRange:function(year){var startYear,endYear;return $scope.config.multiSelection&&(startYear=moment(this.startDate,calendarCoreConstants.DATE_FORMAT.DATE_ID).year(),endYear=moment(this.endDate,calendarCoreConstants.DATE_FORMAT.DATE_ID).year()),$scope.config.multiSelection&&year>=+startYear&&year<=+endYear},next:function(){this.curentView++,this.years=this.yearsArr[this.curentView]},previous:function(){this.curentView--,this.years=this.yearsArr[this.curentView]},isDisableNext:function(){return this.curentView>=this.yearsArr.length-1},isDisablePrev:function(){return this.curentView<=0},click:function(year){this.selectedDate.year=year,this.applyDates(!0)},applyDates:function(isClicked){function isNewRangeStart(clickedDate){return!$scope.config.multiSelection||!that.startDateSelected&&(!that.endDate||+clickedDate.startDate>that.endDate)}function setYearRange(clickedDate){isNewRangeStart(clickedDate)?(startDate=clickedDate.startDate,endDate=clickedDate.endDate,that.startDateSelected=!0):(+clickedDate.startDate<that.startDate?(startDate=clickedDate.startDate,endDate=that.endDate):(startDate=that.startDate,endDate=clickedDate.endDate),that.startDateSelected=!1)}var startDate,endDate,startEndDate,endYear,that=this;this.isFiscal?(startEndDate=CalendarUiService.getStartEndDateOfFiscalYear(this.selectedDate.year),$scope.config.multiSelection&&!isClicked&&(endYear=moment($scope.config.endDate,calendarCoreConstants.DATE_FORMAT.DATE_ID).year(),startEndDate.endDate=CalendarUiService.getStartEndDateOfFiscalYear(endYear).endDate),setYearRange({startDate:startEndDate.startDate,endDate:startEndDate.endDate})):setYearRange({startDate:this.selectedDate.year+"0101",endDate:this.selectedDate.year+"1231"}),this.endDate=+endDate>+$scope.config.maxEndDate?$scope.config.maxEndDate:endDate,this.startDate=+startDate<+$scope.config.minStartDate?$scope.config.minStartDate:startDate,$scope.$emit(calendarCoreConstants.EVENTS.CALENDAR_CLICK,{startDate:this.startDate,endDate:this.endDate,isClicked:isClicked})}},CalendarUiService.setFiscalData($scope.fiscalData),CalendarUiService.setMinDate($scope.config.minStartDate),CalendarUiService.setMaxDate($scope.config.maxEndDate),$scope.calendarYear.init($scope.config.startDate),$scope.calendarYear.applyDates(),$scope.$on(calendarCoreConstants.EVENTS.CALENDAR_DATA_UPDATE,function(e,date){date.type===calendarCoreConstants.VIEWS.YEAR&&($scope.calendarYear.init(date.startDate),$scope.calendarYear.applyDates())})}]);
!function(module){try{module=angular.module("x1.ui.calendar-core")}catch(e){module=angular.module("x1.ui.calendar-core",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("calendar-core/calendar-core.html",'<div ng-controller="x1CalendarCoreCtrl" ng-switch on="config.view" class="x1-calendar-core {{config.calendarSize}}">\n    <calendar-core-any ng-switch-when="ANY"></calendar-core-any>\n    <calendar-core-day ng-switch-default></calendar-core-day>\n    <calendar-core-week ng-switch-when="WEEK"></calendar-core-week>\n    <calendar-core-month ng-switch-when="MONTH"></calendar-core-month>\n    <calendar-core-quarter ng-switch-when="QUARTER"></calendar-core-quarter>\n    <calendar-core-year ng-switch-when="YEAR"></calendar-core-year>\n</div>')}])}();
!function(module){try{module=angular.module("x1.ui.calendar-core")}catch(e){module=angular.module("x1.ui.calendar-core",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("calendar-core/any/any.html",'<section role="region" class="x1-calendar-core-any row text-center" aria-label="{{\'x1UiNgCalendarCore.ARIA.CAL_TYPE_ANY\' | translate}}">\n\t<!--CALENDAR HEADER-->\n\t<header role="banner" class="year-header" ng-class="{\'single-year\': singleView}" aria-labelledby="calYearLabel">\n\t\t<div class="year-control">\n\t\t\t<button ng-if="!anyDay.isDisablePrevYear()" role="button" title="{{anyDay.leftDate.year - 1}}" class="calendar-controls prev-year" ng-click="anyDay.prevYear()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_YEAR"></span>\n\t\t\t</button>\n\t\t\t<h2 id="calYearLabel" class="year-label">{{anyDay.leftDate.year}}</h2>\n\t\t\t<button ng-if="!anyDay.isDisableNextYear()" role="button" title="{{anyDay.leftDate.year + 1}}" class="calendar-controls next-year" ng-click="anyDay.nextYear()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_YEAR"></span>\n\t\t\t</button>\n\t\t</div>\n\t</header>\n\t<!--LEFT CALENDAR-->\n\t<section role="region" class="calendar-left row col-sm-6" aria-label="{{monthShortNames + anyDay.leftDate.options.name | translate}} {{anyDay.leftDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL\' | translate}}">\n\t\t<header role="banner" class="month-header col-sm-12 text-center" aria-labelledby="calMonthLabel1">\n\t\t\t<button ng-hide="anyDay.isDisablePrev()" role="button" class="calendar-controls prev" ng-click="anyDay.prev()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_MONTH\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_MONTH"></span>\n\t\t\t</button>\n\t\t\t<h3 id="calMonthLabel1" class="month-label" ng-class="{\'text-center\': singleView}">\n\t\t\t\t{{monthShortNames + anyDay.leftDate.options.name | translate}}\n\t\t\t\t{{anyDay.leftDate.options.periodNum}}\n\t\t\t</h3>\n\t\t\t<button ng-if="singleView" ng-hide="anyDay.isDisableNext()" role="button" class="calendar-controls next" ng-click="anyDay.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_MONTH\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_MONTH"></span>\n\t\t\t</button>\n\t\t</header>\n\t\t<article role="article" class="col-sm-12" aria-label="{{monthShortNames + anyDay.leftDate.options.name | translate}} {{anyDay.leftDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL_DAYS\' | translate}}">\n\t\t\t<table class="table">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th ng-repeat="day in dayNamesShortLeft track by $index" class="table-headers text-center" translate="{{dayShortNames + day}}"></th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t<tr ng-repeat="tr in anyDay.calendarLeft">\n\t\t\t\t\t<td ng-repeat="td in tr track by $index" class="day text-right" ng-click="!td.disable && td.daysInCurrentMonth && anyDay.click(td)" ng-class="{\'start-date\': anyDay.isStartDate(td), \'end-date\': anyDay.isEndDate(td),\n\t\t\t\t\t\t\t\'no-end-date\': config.noEndDate, \'in-range\': anyDay.isInRange(td),\n\t\t\t\t\t\t\t\'disable\': td.disable, \'today\': td.today, \'otherday\': !td.daysInCurrentMonth}" day="{{td.data}}" title="{{td.title}}">\n\t\t\t\t\t\t<div class="div-day">\n\t\t\t\t\t\t\t<a class="calendar-date" ng-bind="td.day" title="{{td.title}}"></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</article>\n\t</section>\n\t<!--RIGHT CALENDAR-->\n\t<section ng-if="!singleView" role="region" class="calendar-right row col-sm-6" aria-label="{{monthShortNames + anyDay.rightDate.options.name | translate}} {{anyDay.rightDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL\' | translate}}">\n\t\t<header role="banner" class="month-header col-sm-12 text-center" aria-labelledby="calMonthLabel2">\n\t\t\t<h3 id="calMonthLabel2" class="month-label">\n\t\t\t\t{{monthShortNames + anyDay.rightDate.options.name | translate}}\n\t\t\t\t{{anyDay.rightDate.options.periodNum}}\n\t\t\t</h3>\n\t\t\t<button ng-hide="anyDay.isDisableNext()" role="button" class="calendar-controls next" ng-click="anyDay.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_MONTH\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_MONTH"></span>\n\t\t\t</button>\n\t\t</header>\n\t\t<article role="article" class="col-sm-12" aria-label="{{monthShortNames + anyDay.rightDate.options.name | translate}} {{anyDay.rightDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL_DAYS\' | translate}}">\n\t\t\t<table class="table">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th ng-repeat="day in dayNamesShortRight track by $index" class="table-headers text-center" translate="{{dayShortNames + day}}"></th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t<tr ng-repeat="tr in anyDay.calendarRight">\n\t\t\t\t\t<td ng-repeat="td in tr track by $index" class="day text-right" ng-click="!td.disable && td.daysInCurrentMonth && anyDay.click(td)" ng-class="{\'start-date\': anyDay.isStartDate(td), \'end-date\': anyDay.isEndDate(td),\n\t\t\t\t\t\t\t\'no-end-date\': config.noEndDate, \'in-range\': anyDay.isInRange(td),\n\t\t\t\t\t\t\t\'disable\': td.disable, \'today\': td.today, \'otherday\': !td.daysInCurrentMonth}" day="{{td.data}}" title="{{td.title}}">\n\t\t\t\t\t\t<div class="div-day">\n\t\t\t\t\t\t\t<a class="calendar-date" ng-bind="td.day" title="{{td.title}}"></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</article>\n\t</section>\n</section>')}])}();
!function(module){try{module=angular.module("x1.ui.calendar-core")}catch(e){module=angular.module("x1.ui.calendar-core",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("calendar-core/day/day.html",'<section role="region" class="x1-calendar-core-day row text-center" aria-label="{{\'x1UiNgCalendarCore.ARIA.CAL_TYPE_DAY\' | translate}}">\n\t<!--CALENDAR HEADER-->\n\t<header role="banner" class="year-header" ng-class="{\'single-year\': singleView}" aria-labelledby="calYearLabel">\n\t\t<div class="year-control">\n\t\t\t<button ng-if="!calendarDay.isDisablePrevYear()" role="button" title="{{calendarDay.leftDate.year - 1}}" class="calendar-controls prev-year" ng-click="calendarDay.prevYear()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_YEAR"></span>\n\t\t\t</button>\n\t\t\t<h2 id="calYearLabel" class="year-label">{{calendarDay.leftDate.year}}</h2>\n\t\t\t<button ng-if="!calendarDay.isDisableNextYear()" role="button" title="{{calendarDay.leftDate.year + 1}}" class="calendar-controls next-year" ng-click="calendarDay.nextYear()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_YEAR"></span>\n\t\t\t</button>\n\t\t</div>\n\t</header>\n\t<!--LEFT CALENDAR-->\n\t<section role="region" class="calendar-left row col-sm-6" aria-label="{{monthShortNames + calendarDay.leftDate.options.name | translate}} {{calendarDay.leftDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL\' | translate}}">\n\t\t<header role="banner" class="month-header col-sm-12 text-center" aria-labelledby="calMonthLabel1">\n\t\t\t<button ng-hide="calendarDay.isDisablePrev()" role="button" class="calendar-controls prev" ng-click="calendarDay.prev()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_MONTH\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_MONTH"></span>\n\t\t\t</button>\n\t\t\t<h3 id="calMonthLabel1" class="month-label" ng-class="{\'text-center\': singleView}">\n\t\t\t\t{{monthShortNames + calendarDay.leftDate.options.name | translate}}\n\t\t\t\t{{calendarDay.leftDate.options.periodNum}}\n\t\t\t</h3>\n\t\t\t<button ng-if="singleView" ng-hide="calendarDay.isDisableNext()" role="button" class="calendar-controls next" ng-click="calendarDay.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_MONTH\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_MONTH"></span>\n\t\t\t</button>\n\t\t</header>\n\t\t<article role="article" class="col-sm-12" aria-label="{{monthShortNames + calendarDay.leftDate.options.name | translate}} {{calendarDay.leftDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL_DAYS\' | translate}}">\n\t\t\t<table class="table">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th ng-repeat="day in dayNamesShortLeft track by $index" class="table-headers text-center" translate="{{dayShortNames + day}}"></th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t<tr ng-repeat="tr in calendarDay.calendarLeft">\n\t\t\t\t\t<td ng-repeat="td in tr track by $index" class="day text-right" ng-click="!td.disable &&  td.daysInCurrentMonth && calendarDay.click(td)" ng-class="{\'selected\': calendarDay.isSelectedDay(td.day, td.month, td.year),\n\t\t\t\t\t\t\t\'disable\': td.disable, \'today\': td.today, \'otherday\': !td.daysInCurrentMonth}" day="{{td.data}}" title="{{td.title}}">\n\t\t\t\t\t\t<div class="div-day">\n\t\t\t\t\t\t\t<a class="calendar-date" ng-bind="td.day" title="{{td.title}}"></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</article>\n\t</section>\n\t<!--RIGHT CALENDAR-->\n\t<section ng-if="!singleView" role="region" class="calendar-right row col-sm-6" aria-label="{{monthShortNames + calendarDay.rightDate.options.name | translate}} {{calendarDay.rightDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL\' | translate}}">\n\t\t<header role="banner" class="month-header col-sm-12 text-center" aria-labelledby="calMonthLabel2">\n\t\t\t<h3 id="calMonthLabel2" class="month-label">\n\t\t\t\t{{monthShortNames + calendarDay.rightDate.options.name | translate}}\n\t\t\t\t{{calendarDay.rightDate.options.periodNum}}\n\t\t\t</h3>\n\t\t\t<button ng-hide="calendarDay.isDisableNext()" role="button" class="calendar-controls next" ng-click="calendarDay.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_MONTH\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_MONTH"></span>\n\t\t\t</button>\n\t\t</header>\n\t\t<article role="article" class="col-sm-12" aria-label="{{monthShortNames + calendarDay.rightDate.options.name | translate}} {{calendarDay.rightDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL_DAYS\' | translate}}">\n\t\t\t<table class="table">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th ng-repeat="day in dayNamesShortRight track by $index" class="table-headers text-center" translate="{{dayShortNames + day}}"></th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t<tr ng-repeat="tr in calendarDay.calendarRight">\n\t\t\t\t\t<td ng-repeat="td in tr track by $index" class="day text-right" ng-click="!td.disable && td.daysInCurrentMonth && calendarDay.click(td)" ng-class="{\'selected\': calendarDay.isSelectedDay(td.day, td.month, td.year),\n\t\t\t\t\t\t\t\'disable\': td.disable, \'today\': td.today, \'otherday\': !td.daysInCurrentMonth}" day="{{td.data}}" title="{{td.title}}">\n\t\t\t\t\t\t<div class="div-day">\n\t\t\t\t\t\t\t<a class="calendar-date" ng-bind="td.day" title="{{td.title}}"></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</article>\n\t</section>\n</section>')}])}();
!function(module){try{module=angular.module("x1.ui.calendar-core")}catch(e){module=angular.module("x1.ui.calendar-core",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("calendar-core/month/month.html",'<section role="region" class="x1-calendar-core-month row text-center" aria-label="{{\'x1UiNgCalendarCore.ARIA.CAL_TYPE_MONTH\' | translate}}">\n\t<!--CALENDAR HEADER-->\n\t<header role="banner" class="year-header" aria-labelledby="calYearLabel">\n\t\t<div class="year-control">\n\t\t\t<button ng-if="!calendarMonth.isDisablePrev()" role="button" title="{{calendarMonth.activeYear - 1}}" class="calendar-controls prev-year" ng-click="calendarMonth.prev()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_YEAR"></span>\n\t\t\t</button>\n\t\t\t<h2 id="calYearLabel" class="year-label">{{calendarMonth.activeYear}}</h2>\n\t\t\t<button ng-if="!calendarMonth.isDisableNext()" role="button" title="{{calendarMonth.activeYear + 1}}" class="calendar-controls next-year" ng-click="calendarMonth.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_YEAR"></span>\n\t\t\t</button>\n\t\t</div>\n\t</header>\n\t<!--CALENDAR BODY-->\n\t<section role="region" class="month-wrapper col-sm-12" aria-label="{{calendarMonth.activeYear}} {{month.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL_MONTHS\' | translate}}">\n\t\t<ul class="list-unstyled">\n\t\t\t<li ng-repeat="month in calendarMonth.months" class="col-sm-3">\n\t\t\t\t<h3 class="month-blocks item text-center" ng-class="{\'selected\': calendarMonth.isStartEndMonth($index, month),\n\t\t\t\t\t\t\'in-range\': calendarMonth.isActive($index, month),\n\t\t\t\t\t\t\'disable\': calendarMonth.isDisable($index, month)}" ng-click="!calendarMonth.isDisable($index, month) && calendarMonth.click($index, month)">\n\t\t\t\t\t{{monthShortNames + month.name | translate}}\n\t\t\t\t\t{{month.periodNum}}</h3>\n\t\t\t</li>\n\t\t</ul>\n\t</section>\n</section>')}])}();
!function(module){try{module=angular.module("x1.ui.calendar-core")}catch(e){module=angular.module("x1.ui.calendar-core",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("calendar-core/quarter/quarter.html",'<section role="region" class="x1-calendar-core-quarter row text-center" aria-label="{{\'x1UiNgCalendarCore.ARIA.CAL_TYPE_QUARTER\' | translate}}">\n\t<!--CALENDAR HEADER-->\n\t<header role="banner" class="year-header" aria-labelledby="calYearLabel">\n\t\t<div class="year-control">\n\t\t\t<button ng-if="!calendarQuarter.isDisablePrev()" role="button" class="calendar-controls prev-year" title="{{calendarQuarter.activeYear - 1}}" ng-class="{disable : calendarQuarter.isDisablePrev()}" ng-click="calendarQuarter.prev()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_YEAR"></span>\n\t\t\t</button>\n\t\t\t<h2 id="calYearLabel" class="year-label">{{calendarQuarter.activeYear}}</h2>\n\t\t\t<button ng-if="!calendarQuarter.isDisableNext()" role="button" class="calendar-controls next-year" title="{{calendarQuarter.activeYear + 1}}" ng-click="calendarQuarter.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_YEAR"></span>\n\t\t\t</button>\n\t\t</div>\n\t</header>\n\t<!--CALENDAR BODY-->\n\t<section role="region" class="col-sm-12" aria-label="{{calendarQuarter.activeYear}} {{\'x1UiNgCalendarCore.ARIA.CAL_QUARTERS\' | translate}}">\n\t\t<div ng-repeat="quarter in calendarQuarter.quarters" class="col-sm-6">\n\t\t\t<div class="quarter-blocks item text-center" ng-class="{\'selected\': calendarQuarter.isActive($index, quarter),\n\t\t\t\t\t\'in-range\': calendarQuarter.isInRange($index, quarter),\n\t\t\t\t\t\'disable\': calendarQuarter.isDisable($index, quarter)}" ng-click="!calendarQuarter.isDisable($index, quarter) && calendarQuarter.click($index, quarter)">\n\t\t\t\t<h3>{{quarterNames + quarter.name | translate}}</h3>\n\t\t\t\t<small>{{monthShortNames + quarter.subNameStart | translate}} - {{monthShortNames\n\t\t\t\t\t+ quarter.subNameEnd | translate}}</small>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n</section>')}])}();
!function(module){try{module=angular.module("x1.ui.calendar-core")}catch(e){module=angular.module("x1.ui.calendar-core",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("calendar-core/week/week.html",'<section role="region" class="x1-calendar-core-week row text-center" aria-label="{{\'x1UiNgCalendarCore.ARIA.CAL_TYPE_WEEK\' | translate}}">\n\t<!--CALENDAR HEADER-->\n\t<header role="banner" class="year-header" ng-class="{\'single-year\': singleView}" aria-labelledby="calYearLabel">\n\t\t<div class="year-control">\n\t\t\t<button ng-if="!calendarWeek.isDisablePrevYear()" role="button" title="{{calendarWeek.leftDate.year - 1}}" class="calendar-controls prev-year" ng-click="calendarWeek.prevYear()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_YEAR"></span>\n\t\t\t</button>\n\t\t\t<h2 id="calYearLabel" class="year-label">{{calendarWeek.leftDate.year}}</h2>\n\t\t\t<button ng-if="!calendarWeek.isDisableNextYear()" role="button" title="{{calendarWeek.leftDate.year + 1}}" class="calendar-controls next-year" ng-click="calendarWeek.nextYear()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_YEAR\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_YEAR"></span>\n\t\t\t</button>\n\t\t</div>\n\t</header>\n\t<!--LEFT CALENDAR-->\n\t<section role="region" class="calendar-left row col-sm-6" aria-label="{{monthShortNames + calendarWeek.leftDate.options.name | translate}} {{calendarWeek.leftDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL\' | translate}}">\n\t\t<header role="banner" class="month-header col-sm-12 text-center" aria-labelledby="calMonthLabel1">\n\t\t\t<button ng-hide="calendarWeek.isDisablePrev()" role="button" class="calendar-controls prev" ng-click="calendarWeek.prev()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_WEEK\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_WEEK"></span>\n\t\t\t</button>\n\t\t\t<h3 id="calMonthLabel1" class="month-label" ng-class="{\'text-center\': singleView}">\n\t\t\t\t{{monthShortNames + calendarWeek.leftDate.options.name | translate}}\n\t\t\t\t{{calendarWeek.leftDate.options.periodNum}}\n\t\t\t</h3>\n\t\t\t<button ng-if="singleView" ng-hide="calendarWeek.isDisableNext()" role="button" class="calendar-controls next" ng-click="calendarWeek.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_WEEK\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_WEEK"></span>\n\t\t\t</button>\n\t\t</header>\n\t\t<article role="article" class="col-sm-12" aria-label="{{monthShortNames + calendarWeek.leftDate.options.name | translate}} {{calendarWeek.leftDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL_DAYS\' | translate}}">\n\t\t\t<table class="table">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th ng-repeat="day in dayNamesShortLeft track by $index" class="table-headers text-center" translate="{{dayShortNames + day}}"></th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tr ng-repeat="tr in calendarWeek.calendarLeft" class="tr-week" ng-class="{selected: calendarWeek.isSelectedWeek(tr),\n\t\t\t\t\t\thovered: calendarWeek.isHoveredWeek(tr)}" ng-mouseover="calendarWeek.addHover(tr)" ng-mouseleave="calendarWeek.removeHover()">\n\t\t\t\t\t<td ng-repeat="td in tr track by $index" class="text-right" ng-click="!td.disable && calendarWeek.click({data: td, firstDay: tr[0].data, type: \'left\'})" ng-class="{\'disable\': td.disable, \'today\': td.today,\n\t\t\t\t\t\t\t\'otherday\': !td.daysInCurrentMonth, \'max-day\': td.maxDate,\n\t\t\t\t\t\t\t\'min-day\': td.minDate, \'fiscal-week-hover\': calendarWeek.isFiscalWeekHover(td.fiscal),\n\t\t\t\t\t\t\t\'fiscal-week-end\': !config.multiSelection && td.fiscalEnd,\n\t\t\t\t\t\t\t\'fiscal-week-start\': !config.multiSelection && td.fiscalStart,\n\t\t\t\t\t\t\t\'fiscal-week-selected\': calendarWeek.isFiscalWeekSelected(td.fiscal),\n\t\t\t\t\t\t\t\'no-end-date\': config.noEndDate, \'week-no-end-date\': calendarWeek.checkNoEndDate(td.data),\n\t\t\t\t\t\t\t\'multiselection\': config.multiSelection, \'in-date-range\': calendarWeek.inMultiSelection(td.data)}" data-last-day="{{td.fiscalDateType}}" ng-mouseover="calendarWeek.addFiscalHover(td.fiscal)" ng-mouseleave="calendarWeek.removeFiscalHover()" day="{{td.data}}" title="{{td.title}}" data-fiscal="{{td.fiscal}}">\n\t\t\t\t\t\t<div class="div-day">\n\t\t\t\t\t\t\t<a class="calendar-date" ng-bind="td.day" title="{{td.title}}"></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</article>\n\t</section>\n\t<!--RIGHT CALENDAR-->\n\t<section ng-if="!singleView" role="region" class="calendar-right row col-sm-6" aria-label="{{monthShortNames + calendarWeek.rightDate.options.name | translate}} {{calendarWeek.rightDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL\' | translate}}">\n\t\t<header role="banner" class="month-header col-sm-12 text-center" aria-labelledby="calMonthLabel2">\n\t\t\t<h3 id="calMonthLabel2" class="month-label">\n\t\t\t\t{{monthShortNames + calendarWeek.rightDate.options.name | translate}}\n\t\t\t\t{{calendarWeek.rightDate.options.periodNum}}\n\t\t\t</h3>\n\t\t\t<button ng-hide="calendarWeek.isDisableNext()" role="button" class="calendar-controls next" ng-click="calendarWeek.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_MONTH\' | translate}}">\n\t\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_MONTH"></span>\n\t\t\t</button>\n\t\t</header>\n\t\t<article role="article" class="col-sm-12" aria-label="{{monthShortNames + calendarWeek.rightDate.options.name | translate}} {{calendarWeek.rightDate.options.periodNum}} {{\'x1UiNgCalendarCore.ARIA.CAL_DAYS\' | translate}}">\n\t\t\t<table class="table">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th ng-repeat="day in dayNamesShortRight track by $index" class="table-headers text-center" translate="{{dayShortNames + day}}"></th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tr class="tr-week" ng-repeat="tr in calendarWeek.calendarRight" ng-class="{selected: calendarWeek.isSelectedWeek(tr),\n\t\t\t\t\t\thovered: calendarWeek.isHoveredWeek(tr)}" ng-mouseover="calendarWeek.addHover(tr)" ng-mouseleave="calendarWeek.removeHover()">\n\t\t\t\t\t<td ng-repeat="td in tr track by $index" class="text-right" ng-click="!td.disable && calendarWeek.click({data: td, firstDay: tr[0].data, type: \'right\'})" ng-class="{\'disable\': td.disable, \'today\': td.today, \'otherday\': !td.daysInCurrentMonth,\n\t\t\t\t\t\t\t\'max-day\': td.maxDate, \'min-day\': td.minDate,\n\t\t\t\t\t\t\t\'fiscal-week-end\': !config.multiSelection && td.fiscalEnd,\n\t\t\t\t\t\t\t\'fiscal-week-start\': !config.multiSelection && td.fiscalStart,\n\t\t\t\t\t\t\t\'fiscal-week-hover\': calendarWeek.isFiscalWeekHover(td.fiscal),\n\t\t\t\t\t\t\t\'fiscal-week-selected\': calendarWeek.isFiscalWeekSelected(td.fiscal),\n\t\t\t\t\t\t\t\'no-end-date\': config.noEndDate, \'multiselection\': config.multiSelection,\n\t\t\t\t\t\t\t\'week-no-end-date\': calendarWeek.checkNoEndDate(td.data),\n\t\t\t\t\t\t\t\'in-date-range\': calendarWeek.inMultiSelection(td.data)}" ng-mouseover="calendarWeek.addFiscalHover(td.fiscal, \'right\')" ng-mouseleave="calendarWeek.removeFiscalHover()" data-last-day="{{td.fiscalDateType}}" day="{{td.data}}" title="{{td.title}}" data-fiscal="{{td.fiscal}}">\n\t\t\t\t\t\t<div class="div-day">\n\t\t\t\t\t\t\t<a class="calendar-date" ng-bind="td.day" title="{{td.title}}"></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</article>\n\t</section>\n</section>')}])}();
!function(module){try{module=angular.module("x1.ui.calendar-core")}catch(e){module=angular.module("x1.ui.calendar-core",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("calendar-core/year/year.html",'<section role="region" class="x1-calendar-core-year row text-center" aria-label="{{\'x1UiNgCalendarCore.ARIA.CAL_TYPE_YEAR\' | translate}}">\n\t<!--CALENDAR HEADER-->\n\t<header role="banner" class="year-header" aria-labelledby="calYearLabel">\n\t\t<button ng-hide="calendarYear.isDisablePrev()" role="button" class="calendar-controls" ng-click="calendarYear.previous()" aria-label="{{\'x1UiNgCalendarCore.ARIA.PREV_YEAR\' | translate}}">\n\t\t\t<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>\n\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.PREV_YEAR"></span>\n\t\t</button>\n\t\t<h2 id="calYearLabel" class="year-label">{{calendarYear.years[0]}} -\n\t\t\t{{calendarYear.years[calendarYear.years.length - 1]}}</h2>\n\t\t<button ng-hide="calendarYear.isDisableNext()" role="button" ng-click="calendarYear.next()" aria-label="{{\'x1UiNgCalendarCore.ARIA.NEXT_YEAR\' | translate}}">\n\t\t\t<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>\n\t\t\t<span class="sr-only" translate="x1UiNgCalendarCore.ARIA.NEXT_YEAR"></span>\n\t\t</button>\n\t</header>\n\t<!--CALENDAR BODY-->\n\t<section role="region" class="col-sm-12" aria-label="{{calendarYear.years[0]}} - {{calendarYear.years[calendarYear.years.length - 1]}} {{\'x1UiNgCalendarCore.ARIA.CAL_YEARS\' | translate}}">\n\t\t<div ng-repeat="year in calendarYear.years" class="col-sm-3">\n\t\t\t<div class="year-blocks item text-center" ng-class="{\'selected\' : calendarYear.isSelected(year),\n\t\t\t\t\t\'in-range\': calendarYear.isInRange(year)}" ng-click="calendarYear.click(year)">\n\t\t\t\t<h3>{{year}}</h3>\n\t\t\t\t<span ng-show="calendarYear.isFiscal" class="fiscal-year-label" translate="x1UiNgCalendarCore.FISCAL_YEAR"></span>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n</section>')}])}();