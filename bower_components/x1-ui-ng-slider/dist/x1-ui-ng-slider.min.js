angular.module("x1.ui.slider",["pascalprecht.translate"]);
angular.module("x1.ui.slider").constant("x1.ui.slider.constant",{events:{}});
angular.module("x1.ui.slider").directive("x1Slider",["$timeout",function($timeout){return{restrict:"EA",scope:{range:"=",step:"@?",ngModel:"=?",ngFrom:"=?",ngTo:"=?",pips:"=?",direction:"=?",orientation:"=?",tooltips:"=?",connect:"=?",snap:"=?",behaviour:"=?",format:"=?",margin:"=?",limit:"=?",changeFn:"&"},link:function(scope,element,attrs){function addEventListeners(slider,handle,i){handle.addEventListener("click",function(){this.focus()}),handle.addEventListener("keydown",function(e){var values,value;if(2===slider.noUiSlider.get().length)switch(values=slider.noUiSlider.get(),value=Number(formatFrom(values[i])),e.which){case 37:setSliderValues(value,i,"-");break;case 39:setSliderValues(value,i,"+")}else switch(value=Number(formatFrom(slider.noUiSlider.get())),e.which){case 37:slider.noUiSlider.set(value-1);break;case 39:slider.noUiSlider.set(value+1)}})}function removeEventListeners(slider,handle){handle.removeEventListener("click",function(){this.focus()}),handle.removeEventListener("keydown",function(e){var values,value;if(2===slider.noUiSlider.get().length)switch(values=slider.noUiSlider.get(),value=Number(formatFrom(values[i])),e.which){case 37:setSliderValues(value,i,"-");break;case 39:setSliderValues(value,i,"+")}else switch(value=Number(formatFrom(slider.noUiSlider.get())),e.which){case 37:slider.noUiSlider.set(value-1);break;case 39:slider.noUiSlider.set(value+1)}})}function setSliderValues(val,i,dir){return"-"===dir?0===i?slider.noUiSlider.set([val-1,null]):slider.noUiSlider.set([null,val-1]):"+"===dir?0===i?slider.noUiSlider.set([val+1,null]):slider.noUiSlider.set([null,val+1]):void 0}function callChangeFunction(values,handle){"function"==typeof scope.changeFn&&scope.changeFn({values:values,handle:handle})}var createTooltips,createSlider,createRangeSlider,formatTo,formatFrom,unbindWatchers,ngModelUnbindWatch,ngFromUnbindWatch,ngToUnbindWatch,noUiSlider=window.noUiSlider,slider=element[0];angular.element(slider).addClass("x1-slider"),formatTo=function(value){return scope.format&&"function"==typeof scope.format.to?scope.format.to(value):value},formatFrom=function(value){return scope.format&&"function"==typeof scope.format.from?scope.format.from(value):value},unbindWatchers=function(){"function"==typeof ngModelUnbindWatch&&ngModelUnbindWatch(),"function"==typeof ngFromUnbindWatch&&ngFromUnbindWatch(),"function"==typeof ngToUnbindWatch&&ngToUnbindWatch()},scope.$watch("connect",function(newVal,oldVal){newVal!==oldVal&&(slider.noUiSlider.destroy(),unbindWatchers(),"lower"!==newVal&&"upper"!==newVal&&newVal?createRangeSlider():createSlider())}),createTooltips=function(tooltipText){var i,tipHandles,tooltips;if(scope.tooltips)for(tipHandles=slider.getElementsByClassName("noUi-handle"),tooltips=[],i=0;i<tipHandles.length;)tooltips[i]=document.createElement("div"),tipHandles[i].appendChild(tooltips[i]),tooltips[i].className+="x1-slider-tooltip",tooltips[i].innerHTML="<span class='arrow'></span><span></span>",tooltips[i]=tooltips[i].getElementsByTagName("span")[1],tooltips[i].innerHTML=formatTo(tooltipText[i]),i++;return tipHandles},createSlider=function(){var parsedValue,tooltips,toggleOnClass="toggle-on",toggleOffClass="toggle-off";parsedValue=null,noUiSlider.create(slider,{start:scope.ngModel||parseFloat(scope.range.min),step:scope.step&&parseFloat(scope.step),connect:scope.connect,snap:scope.snap,range:scope.range,pips:scope.pips,direction:scope.direction,orientation:scope.orientation,behaviour:scope.behaviour,format:scope.format,margin:scope.margin,limit:scope.limit}),scope.tooltips&&(tooltips=createTooltips([scope.ngModel])),angular.element(slider).hasClass("x1-slider-as-toggle")&&(1===parsedValue?angular.element(slider).addClass(toggleOnClass):angular.element(slider).addClass(toggleOffClass)),slider.noUiSlider.on("update",function(values,handle){return parsedValue=parseFloat(formatFrom(values[0])),scope.tooltips&&(tooltips[handle].getElementsByTagName("span")[1].innerHTML=values[0]),angular.element(slider).hasClass("x1-slider-as-toggle")&&(1===parsedValue?(angular.element(slider).removeClass(toggleOffClass),angular.element(slider).addClass(toggleOnClass)):(angular.element(slider).removeClass(toggleOnClass),angular.element(slider).addClass(toggleOffClass))),$timeout(function(){scope.$apply(function(){return scope.ngModel=parsedValue,scope.ngModel}),callChangeFunction(values,handle)})}),ngModelUnbindWatch=scope.$watch("ngModel",function(newVal){if(newVal!==parsedValue)return scope.tooltips&&(tooltips[0].getElementsByTagName("span")[1].innerHTML=formatTo(newVal)),slider.noUiSlider.set(newVal)})},createRangeSlider=function(){var tooltips,fromParsed=null,toParsed=null;noUiSlider.create(slider,{start:[scope.ngFrom||parseFloat(scope.range.min),scope.ngTo||parseFloat(scope.range.max)],step:scope.step&&parseFloat(scope.step),connect:scope.connect,range:scope.range,snap:scope.snap,pips:scope.pips,direction:scope.direction,orientation:scope.orientation,behaviour:scope.behaviour,format:scope.format,margin:scope.margin,limit:scope.limit}),scope.tooltips&&(tooltips=createTooltips([scope.ngFrom,scope.ngTo])),slider.noUiSlider.on("update",function(values,handle){var from=formatFrom(values[0]),to=formatFrom(values[1]);return fromParsed=parseFloat(from),toParsed=parseFloat(to),scope.tooltips&&(tooltips[handle].getElementsByTagName("span")[1].innerHTML=values[handle]),$timeout(function(){scope.$apply(function(){return scope.ngFrom=fromParsed,scope.ngTo=toParsed,scope.ngTo}),callChangeFunction(values,handle)})}),ngFromUnbindWatch=scope.$watch("ngFrom",function(newVal){if(newVal!==fromParsed)return scope.tooltips&&(tooltips[0].getElementsByTagName("span")[1].innerHTML=formatTo(newVal)),slider.noUiSlider.set([newVal,null])}),ngToUnbindWatch=scope.$watch("ngTo",function(newVal){if(newVal!==toParsed)return scope.tooltips&&(tooltips[1].getElementsByTagName("span")[1].innerHTML=formatTo(newVal)),slider.noUiSlider.set([null,newVal])})},angular.isDefined(scope.ngFrom)&&angular.isDefined(scope.ngTo)?createRangeSlider():createSlider();for(var handles=angular.element(slider.querySelectorAll(".noUi-handle")),i=0;i<handles.length;i++)handles[i].setAttribute("tabindex","0"),addEventListeners(slider,handles[i],i);attrs.$observe("disabled",function(value){var i;if(value)for(i=0;i<handles.length;i++)handles[i].setAttribute("tabindex","-1"),removeEventListeners(slider,handles[i],i);else for(i=0;i<handles.length;i++)handles[i].setAttribute("tabindex","0"),addEventListeners(slider,handles[i],i)})}}}]);